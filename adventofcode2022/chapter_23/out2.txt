coordinates == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Loop number: 0
Move count: 0
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (7, 2)
Neighbours: [[8, 2], [8, 1], [8, 3], [7, 3], [7, 1], [6, 2], [6, 3], [6, 1]]
Tuple of neighbour: (8, 2)
Tuple of neighbour: (8, 1)
Tuple of neighbour: (8, 3)
Tuple of neighbour: (7, 3)
Checking collision:
Checking collision with place == (7, 2) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Proposed move for position (7, 2) is 0
Get new place:
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (5, 3)
Neighbours: [[6, 3], [6, 2], [6, 4], [5, 4], [5, 2], [4, 3], [4, 4], [4, 2]]
Tuple of neighbour: (6, 3)
Checking collision:
Checking collision with place == (5, 3) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Proposed move for position (5, 3) is 0
Get new place:
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (6, 3)
Neighbours: [[7, 3], [7, 2], [7, 4], [6, 4], [6, 2], [5, 3], [5, 4], [5, 2]]
Tuple of neighbour: (7, 3)
Checking collision:
Checking collision with place == (6, 3) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 0
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (7, 3)
Neighbours: [[8, 3], [8, 2], [8, 4], [7, 4], [7, 2], [6, 3], [6, 4], [6, 2]]
Tuple of neighbour: (8, 3)
Tuple of neighbour: (8, 2)
Tuple of neighbour: (8, 4)
Tuple of neighbour: (7, 4)
Checking collision:
Checking collision with place == (7, 3) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 0
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
Proposed move for position (7, 3) is 3
Get new place:
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (9, 3)
Neighbours: [[10, 3], [10, 2], [10, 4], [9, 4], [9, 2], [8, 3], [8, 4], [8, 2]]
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (9, 4)
Checking collision:
Checking collision with place == (9, 3) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Proposed move for position (9, 3) is 0
Get new place:
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (3, 4)
Neighbours: [[4, 4], [4, 3], [4, 5], [3, 5], [3, 3], [2, 4], [2, 5], [2, 3]]
Tuple of neighbour: (4, 4)
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 5)
Checking collision:
Checking collision with place == (3, 4) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Proposed move for position (3, 4) is 0
Get new place:
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (7, 4)
Neighbours: [[8, 4], [8, 3], [8, 5], [7, 5], [7, 3], [6, 4], [6, 5], [6, 3]]
Tuple of neighbour: (8, 4)
Tuple of neighbour: (8, 3)
Tuple of neighbour: (8, 5)
Checking collision:
Checking collision with place == (7, 4) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 0
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (9, 4)
Neighbours: [[10, 4], [10, 3], [10, 5], [9, 5], [9, 3], [8, 4], [8, 5], [8, 3]]
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (9, 5)
Checking collision:
Checking collision with place == (9, 4) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 0
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
Proposed move for position (9, 4) is 3
Get new place:
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (4, 5)
Neighbours: [[5, 5], [5, 4], [5, 6], [4, 6], [4, 4], [3, 5], [3, 6], [3, 4]]
Tuple of neighbour: (5, 5)
Tuple of neighbour: (5, 4)
Tuple of neighbour: (5, 6)
Checking collision:
Checking collision with place == (4, 5) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 0
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (8, 5)
Neighbours: [[9, 5], [9, 4], [9, 6], [8, 6], [8, 4], [7, 5], [7, 6], [7, 4]]
Tuple of neighbour: (9, 5)
Checking collision:
Checking collision with place == (8, 5) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 0
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (9, 5)
Neighbours: [[10, 5], [10, 4], [10, 6], [9, 6], [9, 4], [8, 5], [8, 6], [8, 4]]
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 6)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (9, 4)
Checking collision:
Checking collision with place == (9, 5) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Proposed move for position (9, 5) is 1
Get new place:
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (3, 6)
Neighbours: [[4, 6], [4, 5], [4, 7], [3, 7], [3, 5], [2, 6], [2, 7], [2, 5]]
Tuple of neighbour: (4, 6)
Tuple of neighbour: (4, 5)
Checking collision:
Checking collision with place == (3, 6) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Proposed move for position (3, 6) is 2
Get new place:
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (5, 6)
Neighbours: [[6, 6], [6, 5], [6, 7], [5, 7], [5, 5], [4, 6], [4, 7], [4, 5]]
Tuple of neighbour: (6, 6)
Checking collision:
Checking collision with place == (5, 6) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 0
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (6, 6)
Neighbours: [[7, 6], [7, 5], [7, 7], [6, 7], [6, 5], [5, 6], [5, 7], [5, 5]]
Tuple of neighbour: (7, 6)
Checking collision:
Checking collision with place == (6, 6) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Proposed move for position (6, 6) is 0
Get new place:
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (7, 6)
Neighbours: [[8, 6], [8, 5], [8, 7], [7, 7], [7, 5], [6, 6], [6, 7], [6, 5]]
Tuple of neighbour: (8, 6)
Tuple of neighbour: (8, 5)
Checking collision:
Checking collision with place == (7, 6) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 0
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (3, 7)
Neighbours: [[4, 7], [4, 6], [4, 8], [3, 8], [3, 6], [2, 7], [2, 8], [2, 6]]
Tuple of neighbour: (4, 7)
Checking collision:
Checking collision with place == (3, 7) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Proposed move for position (3, 7) is 2
Get new place:
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (4, 7)
Neighbours: [[5, 7], [5, 6], [5, 8], [4, 8], [4, 6], [3, 7], [3, 8], [3, 6]]
Tuple of neighbour: (5, 7)
Tuple of neighbour: (5, 6)
Checking collision:
Checking collision with place == (4, 7) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 0
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (6, 7)
Neighbours: [[7, 7], [7, 6], [7, 8], [6, 8], [6, 6], [5, 7], [5, 8], [5, 6]]
Tuple of neighbour: (7, 7)
Tuple of neighbour: (7, 6)
Checking collision:
Checking collision with place == (6, 7) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 0
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (8, 7)
Neighbours: [[9, 7], [9, 6], [9, 8], [8, 8], [8, 6], [7, 7], [7, 8], [7, 6]]
Tuple of neighbour: (9, 7)
Checking collision:
Checking collision with place == (8, 7) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 0
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (9, 7)
Neighbours: [[10, 7], [10, 6], [10, 8], [9, 8], [9, 6], [8, 7], [8, 8], [8, 6]]
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 6)
Tuple of neighbour: (10, 8)
Tuple of neighbour: (9, 8)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (8, 7)
Checking collision:
Checking collision with place == (9, 7) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Proposed move for position (9, 7) is 0
Get new place:
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (4, 8)
Neighbours: [[5, 8], [5, 7], [5, 9], [4, 9], [4, 7], [3, 8], [3, 9], [3, 7]]
Tuple of neighbour: (5, 8)
Tuple of neighbour: (5, 7)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (4, 7)
Checking collision:
Checking collision with place == (4, 8) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Proposed move for position (4, 8) is 1
Get new place:
coords == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Called check_moving with cur_place (7, 8)
Neighbours: [[8, 8], [8, 7], [8, 9], [7, 9], [7, 7], [6, 8], [6, 9], [6, 7]]
Tuple of neighbour: (8, 8)
Tuple of neighbour: (8, 7)
Checking collision:
Checking collision with place == (7, 8) move_offset== 0 other_elves == {(7, 2): 0, (5, 3): 1, (6, 3): 2, (7, 3): 3, (9, 3): 4, (3, 4): 5, (7, 4): 6, (9, 4): 7, (4, 5): 8, (8, 5): 9, (9, 5): 10, (3, 6): 11, (5, 6): 12, (6, 6): 13, (7, 6): 14, (3, 7): 15, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (4, 8): 20, (7, 8): 21}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 0
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 0
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 1]
Proposed move for position (7, 8) is 1
Get new place:
==== 2 =====
Moved places: {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(0, (7, 2))]
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(1, (5, 3))]
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(3, (7, 3))]
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(4, (9, 3))]
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(5, (3, 4))]
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(7, (9, 4))]
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(10, (9, 5)), (19, (9, 7))]
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(10, (9, 5)), (19, (9, 7))]
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(11, (3, 6))]
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(13, (6, 6))]
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(15, (3, 7))]
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(20, (4, 8))]
moved_places == {(7, 1): [(0, (7, 2))], (5, 2): [(1, (5, 3))], (8, 3): [(3, (7, 3))], (9, 2): [(4, (9, 3))], (3, 3): [(5, (3, 4))], (10, 4): [(7, (9, 4))], (9, 6): [(10, (9, 5)), (19, (9, 7))], (2, 6): [(11, (3, 6))], (6, 5): [(13, (6, 6))], (2, 7): [(15, (3, 7))], (4, 9): [(20, (4, 8))], (7, 9): [(21, (7, 8))]}
element == [(21, (7, 8))]
Loop number: 1
Move count: 1
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (6, 3)
Neighbours: [[7, 3], [7, 2], [7, 4], [6, 4], [6, 2], [5, 3], [5, 4], [5, 2]]
Tuple of neighbour: (7, 3)
Tuple of neighbour: (7, 2)
Tuple of neighbour: (7, 4)
Checking collision:
Checking collision with place == (6, 3) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (7, 4)
Neighbours: [[8, 4], [8, 3], [8, 5], [7, 5], [7, 3], [6, 4], [6, 5], [6, 3]]
Tuple of neighbour: (8, 4)
Tuple of neighbour: (8, 3)
Checking collision:
Checking collision with place == (7, 4) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (4, 5)
Neighbours: [[5, 5], [5, 4], [5, 6], [4, 6], [4, 4], [3, 5], [3, 6], [3, 4]]
Tuple of neighbour: (5, 5)
Tuple of neighbour: (5, 4)
Tuple of neighbour: (5, 6)
Checking collision:
Checking collision with place == (4, 5) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Proposed move for position (4, 5) is 1
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (8, 5)
Neighbours: [[9, 5], [9, 4], [9, 6], [8, 6], [8, 4], [7, 5], [7, 6], [7, 4]]
Tuple of neighbour: (9, 5)
Checking collision:
Checking collision with place == (8, 5) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (9, 5)
Neighbours: [[10, 5], [10, 4], [10, 6], [9, 6], [9, 4], [8, 5], [8, 6], [8, 4]]
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 4)
Checking collision:
Checking collision with place == (9, 5) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Proposed move for position (9, 5) is 0
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (5, 6)
Neighbours: [[6, 6], [6, 5], [6, 7], [5, 7], [5, 5], [4, 6], [4, 7], [4, 5]]
Tuple of neighbour: (6, 6)
Tuple of neighbour: (6, 5)
Checking collision:
Checking collision with place == (5, 6) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (7, 6)
Neighbours: [[8, 6], [8, 5], [8, 7], [7, 7], [7, 5], [6, 6], [6, 7], [6, 5]]
Tuple of neighbour: (8, 6)
Tuple of neighbour: (8, 5)
Checking collision:
Checking collision with place == (7, 6) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (4, 7)
Neighbours: [[5, 7], [5, 6], [5, 8], [4, 8], [4, 6], [3, 7], [3, 8], [3, 6]]
Tuple of neighbour: (5, 7)
Tuple of neighbour: (5, 6)
Checking collision:
Checking collision with place == (4, 7) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Proposed move for position (4, 7) is 0
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (6, 7)
Neighbours: [[7, 7], [7, 6], [7, 8], [6, 8], [6, 6], [5, 7], [5, 8], [5, 6]]
Tuple of neighbour: (7, 7)
Tuple of neighbour: (7, 6)
Checking collision:
Checking collision with place == (6, 7) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Proposed move for position (6, 7) is 0
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (8, 7)
Neighbours: [[9, 7], [9, 6], [9, 8], [8, 8], [8, 6], [7, 7], [7, 8], [7, 6]]
Tuple of neighbour: (9, 7)
Checking collision:
Checking collision with place == (8, 7) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Proposed move for position (8, 7) is 0
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (9, 7)
Neighbours: [[10, 7], [10, 6], [10, 8], [9, 8], [9, 6], [8, 7], [8, 8], [8, 6]]
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 6)
Tuple of neighbour: (10, 8)
Tuple of neighbour: (9, 8)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (8, 7)
Checking collision:
Checking collision with place == (9, 7) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Proposed move for position (9, 7) is 0
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (7, 1)
Neighbours: [[8, 1], [8, 0], [8, 2], [7, 2], [7, 0], [6, 1], [6, 2], [6, 0]]
Tuple of neighbour: (8, 1)
Tuple of neighbour: (8, 0)
Tuple of neighbour: (8, 2)
Tuple of neighbour: (7, 2)
Tuple of neighbour: (7, 0)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, 2)
Tuple of neighbour: (6, 0)
Place (7, 1) does not move.
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (5, 2)
Neighbours: [[6, 2], [6, 1], [6, 3], [5, 3], [5, 1], [4, 2], [4, 3], [4, 1]]
Tuple of neighbour: (6, 2)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, 3)
Checking collision:
Checking collision with place == (5, 2) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Proposed move for position (5, 2) is 1
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (8, 3)
Neighbours: [[9, 3], [9, 2], [9, 4], [8, 4], [8, 2], [7, 3], [7, 4], [7, 2]]
Tuple of neighbour: (9, 3)
Tuple of neighbour: (9, 2)
Checking collision:
Checking collision with place == (8, 3) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (9, 2)
Neighbours: [[10, 2], [10, 1], [10, 3], [9, 3], [9, 1], [8, 2], [8, 3], [8, 1]]
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 1)
Tuple of neighbour: (10, 3)
Tuple of neighbour: (9, 3)
Tuple of neighbour: (9, 1)
Tuple of neighbour: (8, 2)
Tuple of neighbour: (8, 3)
Checking collision:
Checking collision with place == (9, 2) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
Proposed move for position (9, 2) is 2
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (3, 3)
Neighbours: [[4, 3], [4, 2], [4, 4], [3, 4], [3, 2], [2, 3], [2, 4], [2, 2]]
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 2)
Tuple of neighbour: (4, 4)
Tuple of neighbour: (3, 4)
Tuple of neighbour: (3, 2)
Tuple of neighbour: (2, 3)
Tuple of neighbour: (2, 4)
Tuple of neighbour: (2, 2)
Place (3, 3) does not move.
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (10, 4)
Neighbours: [[11, 4], [11, 3], [11, 5], [10, 5], [10, 3], [9, 4], [9, 5], [9, 3]]
Tuple of neighbour: (11, 4)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 3)
Tuple of neighbour: (9, 4)
Tuple of neighbour: (9, 5)
Checking collision:
Checking collision with place == (10, 4) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
Proposed move for position (10, 4) is 2
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (2, 6)
Neighbours: [[3, 6], [3, 5], [3, 7], [2, 7], [2, 5], [1, 6], [1, 7], [1, 5]]
Tuple of neighbour: (3, 6)
Tuple of neighbour: (3, 5)
Tuple of neighbour: (3, 7)
Tuple of neighbour: (2, 7)
Checking collision:
Checking collision with place == (2, 6) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Proposed move for position (2, 6) is 1
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (6, 5)
Neighbours: [[7, 5], [7, 4], [7, 6], [6, 6], [6, 4], [5, 5], [5, 6], [5, 4]]
Tuple of neighbour: (7, 5)
Tuple of neighbour: (7, 4)
Checking collision:
Checking collision with place == (6, 5) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 1
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 1
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (2, 7)
Neighbours: [[3, 7], [3, 6], [3, 8], [2, 8], [2, 6], [1, 7], [1, 8], [1, 6]]
Tuple of neighbour: (3, 7)
Tuple of neighbour: (3, 6)
Tuple of neighbour: (3, 8)
Tuple of neighbour: (2, 8)
Tuple of neighbour: (2, 6)
Checking collision:
Checking collision with place == (2, 7) move_offset== 1 other_elves == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 1
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, 1]
Proposed move for position (2, 7) is 0
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (4, 9)
Neighbours: [[5, 9], [5, 8], [5, 10], [4, 10], [4, 8], [3, 9], [3, 10], [3, 8]]
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 8)
Tuple of neighbour: (5, 10)
Tuple of neighbour: (4, 10)
Tuple of neighbour: (4, 8)
Tuple of neighbour: (3, 9)
Tuple of neighbour: (3, 10)
Tuple of neighbour: (3, 8)
Place (4, 9) does not move.
coords == {(6, 3): 2, (7, 4): 6, (4, 5): 8, (8, 5): 9, (9, 5): 10, (5, 6): 12, (7, 6): 14, (4, 7): 16, (6, 7): 17, (8, 7): 18, (9, 7): 19, (7, 1): 0, (5, 2): 1, (8, 3): 3, (9, 2): 4, (3, 3): 5, (10, 4): 7, (2, 6): 11, (6, 5): 13, (2, 7): 15, (4, 9): 20, (7, 9): 21}
Called check_moving with cur_place (7, 9)
Neighbours: [[8, 9], [8, 8], [8, 10], [7, 10], [7, 8], [6, 9], [6, 10], [6, 8]]
Tuple of neighbour: (8, 9)
Tuple of neighbour: (8, 8)
Tuple of neighbour: (8, 10)
Tuple of neighbour: (7, 10)
Tuple of neighbour: (7, 8)
Tuple of neighbour: (6, 9)
Tuple of neighbour: (6, 10)
Tuple of neighbour: (6, 8)
Place (7, 9) does not move.
==== 2 =====
Moved places: {(3, 5): [(8, (4, 5))], (9, 6): [(10, (9, 5))], (4, 8): [(16, (4, 7))], (6, 8): [(17, (6, 7))], (8, 8): [(18, (8, 7))], (9, 8): [(19, (9, 7))], (4, 2): [(1, (5, 2))], (10, 2): [(4, (9, 2))], (11, 4): [(7, (10, 4))], (1, 6): [(11, (2, 6))], (2, 8): [(15, (2, 7))]}
moved_places == {(3, 5): [(8, (4, 5))], (9, 6): [(10, (9, 5))], (4, 8): [(16, (4, 7))], (6, 8): [(17, (6, 7))], (8, 8): [(18, (8, 7))], (9, 8): [(19, (9, 7))], (4, 2): [(1, (5, 2))], (10, 2): [(4, (9, 2))], (11, 4): [(7, (10, 4))], (1, 6): [(11, (2, 6))], (2, 8): [(15, (2, 7))]}
element == [(8, (4, 5))]
moved_places == {(3, 5): [(8, (4, 5))], (9, 6): [(10, (9, 5))], (4, 8): [(16, (4, 7))], (6, 8): [(17, (6, 7))], (8, 8): [(18, (8, 7))], (9, 8): [(19, (9, 7))], (4, 2): [(1, (5, 2))], (10, 2): [(4, (9, 2))], (11, 4): [(7, (10, 4))], (1, 6): [(11, (2, 6))], (2, 8): [(15, (2, 7))]}
element == [(10, (9, 5))]
moved_places == {(3, 5): [(8, (4, 5))], (9, 6): [(10, (9, 5))], (4, 8): [(16, (4, 7))], (6, 8): [(17, (6, 7))], (8, 8): [(18, (8, 7))], (9, 8): [(19, (9, 7))], (4, 2): [(1, (5, 2))], (10, 2): [(4, (9, 2))], (11, 4): [(7, (10, 4))], (1, 6): [(11, (2, 6))], (2, 8): [(15, (2, 7))]}
element == [(16, (4, 7))]
moved_places == {(3, 5): [(8, (4, 5))], (9, 6): [(10, (9, 5))], (4, 8): [(16, (4, 7))], (6, 8): [(17, (6, 7))], (8, 8): [(18, (8, 7))], (9, 8): [(19, (9, 7))], (4, 2): [(1, (5, 2))], (10, 2): [(4, (9, 2))], (11, 4): [(7, (10, 4))], (1, 6): [(11, (2, 6))], (2, 8): [(15, (2, 7))]}
element == [(17, (6, 7))]
moved_places == {(3, 5): [(8, (4, 5))], (9, 6): [(10, (9, 5))], (4, 8): [(16, (4, 7))], (6, 8): [(17, (6, 7))], (8, 8): [(18, (8, 7))], (9, 8): [(19, (9, 7))], (4, 2): [(1, (5, 2))], (10, 2): [(4, (9, 2))], (11, 4): [(7, (10, 4))], (1, 6): [(11, (2, 6))], (2, 8): [(15, (2, 7))]}
element == [(18, (8, 7))]
moved_places == {(3, 5): [(8, (4, 5))], (9, 6): [(10, (9, 5))], (4, 8): [(16, (4, 7))], (6, 8): [(17, (6, 7))], (8, 8): [(18, (8, 7))], (9, 8): [(19, (9, 7))], (4, 2): [(1, (5, 2))], (10, 2): [(4, (9, 2))], (11, 4): [(7, (10, 4))], (1, 6): [(11, (2, 6))], (2, 8): [(15, (2, 7))]}
element == [(19, (9, 7))]
moved_places == {(3, 5): [(8, (4, 5))], (9, 6): [(10, (9, 5))], (4, 8): [(16, (4, 7))], (6, 8): [(17, (6, 7))], (8, 8): [(18, (8, 7))], (9, 8): [(19, (9, 7))], (4, 2): [(1, (5, 2))], (10, 2): [(4, (9, 2))], (11, 4): [(7, (10, 4))], (1, 6): [(11, (2, 6))], (2, 8): [(15, (2, 7))]}
element == [(1, (5, 2))]
moved_places == {(3, 5): [(8, (4, 5))], (9, 6): [(10, (9, 5))], (4, 8): [(16, (4, 7))], (6, 8): [(17, (6, 7))], (8, 8): [(18, (8, 7))], (9, 8): [(19, (9, 7))], (4, 2): [(1, (5, 2))], (10, 2): [(4, (9, 2))], (11, 4): [(7, (10, 4))], (1, 6): [(11, (2, 6))], (2, 8): [(15, (2, 7))]}
element == [(4, (9, 2))]
moved_places == {(3, 5): [(8, (4, 5))], (9, 6): [(10, (9, 5))], (4, 8): [(16, (4, 7))], (6, 8): [(17, (6, 7))], (8, 8): [(18, (8, 7))], (9, 8): [(19, (9, 7))], (4, 2): [(1, (5, 2))], (10, 2): [(4, (9, 2))], (11, 4): [(7, (10, 4))], (1, 6): [(11, (2, 6))], (2, 8): [(15, (2, 7))]}
element == [(7, (10, 4))]
moved_places == {(3, 5): [(8, (4, 5))], (9, 6): [(10, (9, 5))], (4, 8): [(16, (4, 7))], (6, 8): [(17, (6, 7))], (8, 8): [(18, (8, 7))], (9, 8): [(19, (9, 7))], (4, 2): [(1, (5, 2))], (10, 2): [(4, (9, 2))], (11, 4): [(7, (10, 4))], (1, 6): [(11, (2, 6))], (2, 8): [(15, (2, 7))]}
element == [(11, (2, 6))]
moved_places == {(3, 5): [(8, (4, 5))], (9, 6): [(10, (9, 5))], (4, 8): [(16, (4, 7))], (6, 8): [(17, (6, 7))], (8, 8): [(18, (8, 7))], (9, 8): [(19, (9, 7))], (4, 2): [(1, (5, 2))], (10, 2): [(4, (9, 2))], (11, 4): [(7, (10, 4))], (1, 6): [(11, (2, 6))], (2, 8): [(15, (2, 7))]}
element == [(15, (2, 7))]
Loop number: 2
Move count: 2
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (6, 3)
Neighbours: [[7, 3], [7, 2], [7, 4], [6, 4], [6, 2], [5, 3], [5, 4], [5, 2]]
Tuple of neighbour: (7, 3)
Tuple of neighbour: (7, 2)
Tuple of neighbour: (7, 4)
Checking collision:
Checking collision with place == (6, 3) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Proposed move for position (6, 3) is 0
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (7, 4)
Neighbours: [[8, 4], [8, 3], [8, 5], [7, 5], [7, 3], [6, 4], [6, 5], [6, 3]]
Tuple of neighbour: (8, 4)
Tuple of neighbour: (8, 3)
Checking collision:
Checking collision with place == (7, 4) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (8, 5)
Neighbours: [[9, 5], [9, 4], [9, 6], [8, 6], [8, 4], [7, 5], [7, 6], [7, 4]]
Tuple of neighbour: (9, 5)
Tuple of neighbour: (9, 4)
Tuple of neighbour: (9, 6)
Checking collision:
Checking collision with place == (8, 5) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (5, 6)
Neighbours: [[6, 6], [6, 5], [6, 7], [5, 7], [5, 5], [4, 6], [4, 7], [4, 5]]
Tuple of neighbour: (6, 6)
Tuple of neighbour: (6, 5)
Checking collision:
Checking collision with place == (5, 6) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Proposed move for position (5, 6) is 0
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (7, 6)
Neighbours: [[8, 6], [8, 5], [8, 7], [7, 7], [7, 5], [6, 6], [6, 7], [6, 5]]
Tuple of neighbour: (8, 6)
Tuple of neighbour: (8, 5)
Checking collision:
Checking collision with place == (7, 6) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Proposed move for position (7, 6) is 3
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (7, 1)
Neighbours: [[8, 1], [8, 0], [8, 2], [7, 2], [7, 0], [6, 1], [6, 2], [6, 0]]
Tuple of neighbour: (8, 1)
Tuple of neighbour: (8, 0)
Tuple of neighbour: (8, 2)
Tuple of neighbour: (7, 2)
Tuple of neighbour: (7, 0)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, 2)
Tuple of neighbour: (6, 0)
Place (7, 1) does not move.
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (8, 3)
Neighbours: [[9, 3], [9, 2], [9, 4], [8, 4], [8, 2], [7, 3], [7, 4], [7, 2]]
Tuple of neighbour: (9, 3)
Tuple of neighbour: (9, 2)
Tuple of neighbour: (9, 4)
Tuple of neighbour: (8, 4)
Tuple of neighbour: (8, 2)
Tuple of neighbour: (7, 3)
Tuple of neighbour: (7, 4)
Checking collision:
Checking collision with place == (8, 3) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, 1]
Proposed move for position (8, 3) is 1
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (3, 3)
Neighbours: [[4, 3], [4, 2], [4, 4], [3, 4], [3, 2], [2, 3], [2, 4], [2, 2]]
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 2)
Checking collision:
Checking collision with place == (3, 3) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Proposed move for position (3, 3) is 0
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (6, 5)
Neighbours: [[7, 5], [7, 4], [7, 6], [6, 6], [6, 4], [5, 5], [5, 6], [5, 4]]
Tuple of neighbour: (7, 5)
Tuple of neighbour: (7, 4)
Checking collision:
Checking collision with place == (6, 5) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (4, 9)
Neighbours: [[5, 9], [5, 8], [5, 10], [4, 10], [4, 8], [3, 9], [3, 10], [3, 8]]
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 8)
Tuple of neighbour: (5, 10)
Tuple of neighbour: (4, 10)
Tuple of neighbour: (4, 8)
Checking collision:
Checking collision with place == (4, 9) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Proposed move for position (4, 9) is 0
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (7, 9)
Neighbours: [[8, 9], [8, 8], [8, 10], [7, 10], [7, 8], [6, 9], [6, 10], [6, 8]]
Tuple of neighbour: (8, 9)
Tuple of neighbour: (8, 8)
Checking collision:
Checking collision with place == (7, 9) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Proposed move for position (7, 9) is 3
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (3, 5)
Neighbours: [[4, 5], [4, 4], [4, 6], [3, 6], [3, 4], [2, 5], [2, 6], [2, 4]]
Tuple of neighbour: (4, 5)
Tuple of neighbour: (4, 4)
Tuple of neighbour: (4, 6)
Tuple of neighbour: (3, 6)
Tuple of neighbour: (3, 4)
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (2, 4)
Place (3, 5) does not move.
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (9, 6)
Neighbours: [[10, 6], [10, 5], [10, 7], [9, 7], [9, 5], [8, 6], [8, 7], [8, 5]]
Tuple of neighbour: (10, 6)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (9, 7)
Tuple of neighbour: (9, 5)
Tuple of neighbour: (8, 6)
Tuple of neighbour: (8, 7)
Tuple of neighbour: (8, 5)
Checking collision:
Checking collision with place == (9, 6) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, 1]
Proposed move for position (9, 6) is 1
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (4, 8)
Neighbours: [[5, 8], [5, 7], [5, 9], [4, 9], [4, 7], [3, 8], [3, 9], [3, 7]]
Tuple of neighbour: (5, 8)
Tuple of neighbour: (5, 7)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (4, 9)
Checking collision:
Checking collision with place == (4, 8) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Proposed move for position (4, 8) is 0
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (6, 8)
Neighbours: [[7, 8], [7, 7], [7, 9], [6, 9], [6, 7], [5, 8], [5, 9], [5, 7]]
Tuple of neighbour: (7, 8)
Tuple of neighbour: (7, 7)
Tuple of neighbour: (7, 9)
Checking collision:
Checking collision with place == (6, 8) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Proposed move for position (6, 8) is 0
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (8, 8)
Neighbours: [[9, 8], [9, 7], [9, 9], [8, 9], [8, 7], [7, 8], [7, 9], [7, 7]]
Tuple of neighbour: (9, 8)
Checking collision:
Checking collision with place == (8, 8) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 2
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [-1, -1]
Proposed move for position (8, 8) is 2
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (9, 8)
Neighbours: [[10, 8], [10, 7], [10, 9], [9, 9], [9, 7], [8, 8], [8, 9], [8, 7]]
Tuple of neighbour: (10, 8)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 9)
Tuple of neighbour: (9, 9)
Tuple of neighbour: (9, 7)
Tuple of neighbour: (8, 8)
Checking collision:
Checking collision with place == (9, 8) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, 1]
Proposed move for position (9, 8) is 1
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (4, 2)
Neighbours: [[5, 2], [5, 1], [5, 3], [4, 3], [4, 1], [3, 2], [3, 3], [3, 1]]
Tuple of neighbour: (5, 2)
Tuple of neighbour: (5, 1)
Tuple of neighbour: (5, 3)
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 1)
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 3)
Checking collision:
Checking collision with place == (4, 2) move_offset== 2 other_elves == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 2
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 2
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, 1]
Proposed move for position (4, 2) is 1
Get new place:
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (10, 2)
Neighbours: [[11, 2], [11, 1], [11, 3], [10, 3], [10, 1], [9, 2], [9, 3], [9, 1]]
Tuple of neighbour: (11, 2)
Tuple of neighbour: (11, 1)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 1)
Tuple of neighbour: (9, 2)
Tuple of neighbour: (9, 3)
Tuple of neighbour: (9, 1)
Place (10, 2) does not move.
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (11, 4)
Neighbours: [[12, 4], [12, 3], [12, 5], [11, 5], [11, 3], [10, 4], [10, 5], [10, 3]]
Tuple of neighbour: (12, 4)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 3)
Place (11, 4) does not move.
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (1, 6)
Neighbours: [[2, 6], [2, 5], [2, 7], [1, 7], [1, 5], [0, 6], [0, 7], [0, 5]]
Tuple of neighbour: (2, 6)
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 7)
Tuple of neighbour: (1, 7)
Tuple of neighbour: (1, 5)
Tuple of neighbour: (0, 6)
Tuple of neighbour: (0, 7)
Tuple of neighbour: (0, 5)
Place (1, 6) does not move.
coords == {(6, 3): 2, (7, 4): 6, (8, 5): 9, (5, 6): 12, (7, 6): 14, (7, 1): 0, (8, 3): 3, (3, 3): 5, (6, 5): 13, (4, 9): 20, (7, 9): 21, (3, 5): 8, (9, 6): 10, (4, 8): 16, (6, 8): 17, (8, 8): 18, (9, 8): 19, (4, 2): 1, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15}
Called check_moving with cur_place (2, 8)
Neighbours: [[3, 8], [3, 7], [3, 9], [2, 9], [2, 7], [1, 8], [1, 9], [1, 7]]
Tuple of neighbour: (3, 8)
Tuple of neighbour: (3, 7)
Tuple of neighbour: (3, 9)
Tuple of neighbour: (2, 9)
Tuple of neighbour: (2, 7)
Tuple of neighbour: (1, 8)
Tuple of neighbour: (1, 9)
Tuple of neighbour: (1, 7)
Place (2, 8) does not move.
==== 2 =====
Moved places: {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(2, (6, 3))]
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(12, (5, 6))]
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(14, (7, 6))]
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(3, (8, 3))]
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(5, (3, 3))]
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(20, (4, 9))]
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(21, (7, 9))]
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(10, (9, 6))]
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(16, (4, 8))]
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(17, (6, 8))]
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(18, (8, 8))]
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(19, (9, 8))]
moved_places == {(5, 3): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 7): [(14, (7, 6))], (9, 3): [(3, (8, 3))], (2, 3): [(5, (3, 3))], (3, 9): [(20, (4, 9))], (7, 10): [(21, (7, 9))], (10, 6): [(10, (9, 6))], (3, 8): [(16, (4, 8))], (5, 8): [(17, (6, 8))], (8, 7): [(18, (8, 8))], (10, 8): [(19, (9, 8))], (5, 2): [(1, (4, 2))]}
element == [(1, (4, 2))]
Loop number: 3
Move count: 3
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (7, 4)
Neighbours: [[8, 4], [8, 3], [8, 5], [7, 5], [7, 3], [6, 4], [6, 5], [6, 3]]
Tuple of neighbour: (8, 4)
Tuple of neighbour: (8, 3)
Tuple of neighbour: (8, 5)
Checking collision:
Checking collision with place == (7, 4) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [-1, -1]
Proposed move for position (7, 4) is 1
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (8, 5)
Neighbours: [[9, 5], [9, 4], [9, 6], [8, 6], [8, 4], [7, 5], [7, 6], [7, 4]]
Tuple of neighbour: (9, 5)
Tuple of neighbour: (9, 4)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (8, 6)
Tuple of neighbour: (8, 4)
Tuple of neighbour: (7, 5)
Tuple of neighbour: (7, 6)
Tuple of neighbour: (7, 4)
Checking collision:
Checking collision with place == (8, 5) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Proposed move for position (8, 5) is 0
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (7, 1)
Neighbours: [[8, 1], [8, 0], [8, 2], [7, 2], [7, 0], [6, 1], [6, 2], [6, 0]]
Tuple of neighbour: (8, 1)
Tuple of neighbour: (8, 0)
Tuple of neighbour: (8, 2)
Tuple of neighbour: (7, 2)
Tuple of neighbour: (7, 0)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, 2)
Tuple of neighbour: (6, 0)
Place (7, 1) does not move.
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (6, 5)
Neighbours: [[7, 5], [7, 4], [7, 6], [6, 6], [6, 4], [5, 5], [5, 6], [5, 4]]
Tuple of neighbour: (7, 5)
Tuple of neighbour: (7, 4)
Checking collision:
Checking collision with place == (6, 5) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [-1, 1]
Proposed move for position (6, 5) is 2
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (3, 5)
Neighbours: [[4, 5], [4, 4], [4, 6], [3, 6], [3, 4], [2, 5], [2, 6], [2, 4]]
Tuple of neighbour: (4, 5)
Tuple of neighbour: (4, 4)
Tuple of neighbour: (4, 6)
Checking collision:
Checking collision with place == (3, 5) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [-1, -1]
Proposed move for position (3, 5) is 1
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (10, 2)
Neighbours: [[11, 2], [11, 1], [11, 3], [10, 3], [10, 1], [9, 2], [9, 3], [9, 1]]
Tuple of neighbour: (11, 2)
Tuple of neighbour: (11, 1)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 1)
Tuple of neighbour: (9, 2)
Tuple of neighbour: (9, 3)
Checking collision:
Checking collision with place == (10, 2) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Proposed move for position (10, 2) is 0
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (11, 4)
Neighbours: [[12, 4], [12, 3], [12, 5], [11, 5], [11, 3], [10, 4], [10, 5], [10, 3]]
Tuple of neighbour: (12, 4)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 3)
Place (11, 4) does not move.
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (1, 6)
Neighbours: [[2, 6], [2, 5], [2, 7], [1, 7], [1, 5], [0, 6], [0, 7], [0, 5]]
Tuple of neighbour: (2, 6)
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 7)
Tuple of neighbour: (1, 7)
Tuple of neighbour: (1, 5)
Tuple of neighbour: (0, 6)
Tuple of neighbour: (0, 7)
Tuple of neighbour: (0, 5)
Place (1, 6) does not move.
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (2, 8)
Neighbours: [[3, 8], [3, 7], [3, 9], [2, 9], [2, 7], [1, 8], [1, 9], [1, 7]]
Tuple of neighbour: (3, 8)
Checking collision:
Checking collision with place == (2, 8) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [-1, -1]
Proposed move for position (2, 8) is 1
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (5, 3)
Neighbours: [[6, 3], [6, 2], [6, 4], [5, 4], [5, 2], [4, 3], [4, 4], [4, 2]]
Tuple of neighbour: (6, 3)
Tuple of neighbour: (6, 2)
Tuple of neighbour: (6, 4)
Tuple of neighbour: (5, 4)
Tuple of neighbour: (5, 2)
Checking collision:
Checking collision with place == (5, 3) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Proposed move for position (5, 3) is 0
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (4, 6)
Neighbours: [[5, 6], [5, 5], [5, 7], [4, 7], [4, 5], [3, 6], [3, 7], [3, 5]]
Tuple of neighbour: (5, 6)
Tuple of neighbour: (5, 5)
Tuple of neighbour: (5, 7)
Tuple of neighbour: (4, 7)
Tuple of neighbour: (4, 5)
Tuple of neighbour: (3, 6)
Tuple of neighbour: (3, 7)
Tuple of neighbour: (3, 5)
Checking collision:
Checking collision with place == (4, 6) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Proposed move for position (4, 6) is 0
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (7, 7)
Neighbours: [[8, 7], [8, 6], [8, 8], [7, 8], [7, 6], [6, 7], [6, 8], [6, 6]]
Tuple of neighbour: (8, 7)
Checking collision:
Checking collision with place == (7, 7) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [-1, -1]
Proposed move for position (7, 7) is 1
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (9, 3)
Neighbours: [[10, 3], [10, 2], [10, 4], [9, 4], [9, 2], [8, 3], [8, 4], [8, 2]]
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 2)
Checking collision:
Checking collision with place == (9, 3) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 3
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 3
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [-1, 1]
Proposed move for position (9, 3) is 2
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (2, 3)
Neighbours: [[3, 3], [3, 2], [3, 4], [2, 4], [2, 2], [1, 3], [1, 4], [1, 2]]
Tuple of neighbour: (3, 3)
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 4)
Tuple of neighbour: (2, 4)
Tuple of neighbour: (2, 2)
Tuple of neighbour: (1, 3)
Tuple of neighbour: (1, 4)
Tuple of neighbour: (1, 2)
Place (2, 3) does not move.
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (3, 9)
Neighbours: [[4, 9], [4, 8], [4, 10], [3, 10], [3, 8], [2, 9], [2, 10], [2, 8]]
Tuple of neighbour: (4, 9)
Tuple of neighbour: (4, 8)
Tuple of neighbour: (4, 10)
Tuple of neighbour: (3, 10)
Tuple of neighbour: (3, 8)
Checking collision:
Checking collision with place == (3, 9) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Proposed move for position (3, 9) is 0
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (7, 10)
Neighbours: [[8, 10], [8, 9], [8, 11], [7, 11], [7, 9], [6, 10], [6, 11], [6, 9]]
Tuple of neighbour: (8, 10)
Tuple of neighbour: (8, 9)
Tuple of neighbour: (8, 11)
Tuple of neighbour: (7, 11)
Tuple of neighbour: (7, 9)
Tuple of neighbour: (6, 10)
Tuple of neighbour: (6, 11)
Tuple of neighbour: (6, 9)
Place (7, 10) does not move.
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (10, 6)
Neighbours: [[11, 6], [11, 5], [11, 7], [10, 7], [10, 5], [9, 6], [9, 7], [9, 5]]
Tuple of neighbour: (11, 6)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (11, 7)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (9, 7)
Tuple of neighbour: (9, 5)
Place (10, 6) does not move.
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (3, 8)
Neighbours: [[4, 8], [4, 7], [4, 9], [3, 9], [3, 7], [2, 8], [2, 9], [2, 7]]
Tuple of neighbour: (4, 8)
Tuple of neighbour: (4, 7)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (3, 9)
Checking collision:
Checking collision with place == (3, 8) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Proposed move for position (3, 8) is 0
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (5, 8)
Neighbours: [[6, 8], [6, 7], [6, 9], [5, 9], [5, 7], [4, 8], [4, 9], [4, 7]]
Tuple of neighbour: (6, 8)
Tuple of neighbour: (6, 7)
Tuple of neighbour: (6, 9)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 7)
Tuple of neighbour: (4, 8)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (4, 7)
Place (5, 8) does not move.
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (8, 7)
Neighbours: [[9, 7], [9, 6], [9, 8], [8, 8], [8, 6], [7, 7], [7, 8], [7, 6]]
Tuple of neighbour: (9, 7)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (9, 8)
Tuple of neighbour: (8, 8)
Tuple of neighbour: (8, 6)
Tuple of neighbour: (7, 7)
Checking collision:
Checking collision with place == (8, 7) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Proposed move for position (8, 7) is 0
Get new place:
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (10, 8)
Neighbours: [[11, 8], [11, 7], [11, 9], [10, 9], [10, 7], [9, 8], [9, 9], [9, 7]]
Tuple of neighbour: (11, 8)
Tuple of neighbour: (11, 7)
Tuple of neighbour: (11, 9)
Tuple of neighbour: (10, 9)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (9, 8)
Tuple of neighbour: (9, 9)
Tuple of neighbour: (9, 7)
Place (10, 8) does not move.
coords == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Called check_moving with cur_place (5, 2)
Neighbours: [[6, 2], [6, 1], [6, 3], [5, 3], [5, 1], [4, 2], [4, 3], [4, 1]]
Tuple of neighbour: (6, 2)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, 3)
Tuple of neighbour: (5, 3)
Checking collision:
Checking collision with place == (5, 2) move_offset== 3 other_elves == {(7, 4): 6, (8, 5): 9, (7, 1): 0, (6, 5): 13, (3, 5): 8, (10, 2): 4, (11, 4): 7, (1, 6): 11, (2, 8): 15, (5, 3): 2, (4, 6): 12, (7, 7): 14, (9, 3): 3, (2, 3): 5, (3, 9): 20, (7, 10): 21, (10, 6): 10, (3, 8): 16, (5, 8): 17, (8, 7): 18, (10, 8): 19, (5, 2): 1}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 3
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
Proposed move for position (5, 2) is 0
Get new place:
==== 2 =====
Moved places: {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(6, (7, 4))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(9, (8, 5))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(13, (6, 5))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(8, (3, 5))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(4, (10, 2))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(15, (2, 8))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(2, (5, 3))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(12, (4, 6))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(14, (7, 7))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(3, (9, 3))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(20, (3, 9))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(16, (3, 8))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(18, (8, 7))]
moved_places == {(7, 3): [(6, (7, 4))], (9, 5): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (3, 4): [(8, (3, 5))], (11, 2): [(4, (10, 2))], (2, 7): [(15, (2, 8))], (6, 3): [(2, (5, 3))], (5, 6): [(12, (4, 6))], (7, 6): [(14, (7, 7))], (9, 4): [(3, (9, 3))], (4, 9): [(20, (3, 9))], (4, 8): [(16, (3, 8))], (9, 7): [(18, (8, 7))], (6, 2): [(1, (5, 2))]}
element == [(1, (5, 2))]
Loop number: 4
Move count: 4
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (7, 1)
Neighbours: [[8, 1], [8, 0], [8, 2], [7, 2], [7, 0], [6, 1], [6, 2], [6, 0]]
Tuple of neighbour: (8, 1)
Tuple of neighbour: (8, 0)
Tuple of neighbour: (8, 2)
Tuple of neighbour: (7, 2)
Tuple of neighbour: (7, 0)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, 2)
Checking collision:
Checking collision with place == (7, 1) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Proposed move for position (7, 1) is 0
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (11, 4)
Neighbours: [[12, 4], [12, 3], [12, 5], [11, 5], [11, 3], [10, 4], [10, 5], [10, 3]]
Tuple of neighbour: (12, 4)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 3)
Place (11, 4) does not move.
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (1, 6)
Neighbours: [[2, 6], [2, 5], [2, 7], [1, 7], [1, 5], [0, 6], [0, 7], [0, 5]]
Tuple of neighbour: (2, 6)
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 7)
Checking collision:
Checking collision with place == (1, 6) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Proposed move for position (1, 6) is 0
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (2, 3)
Neighbours: [[3, 3], [3, 2], [3, 4], [2, 4], [2, 2], [1, 3], [1, 4], [1, 2]]
Tuple of neighbour: (3, 3)
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 4)
Checking collision:
Checking collision with place == (2, 3) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Proposed move for position (2, 3) is 0
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (7, 10)
Neighbours: [[8, 10], [8, 9], [8, 11], [7, 11], [7, 9], [6, 10], [6, 11], [6, 9]]
Tuple of neighbour: (8, 10)
Tuple of neighbour: (8, 9)
Tuple of neighbour: (8, 11)
Tuple of neighbour: (7, 11)
Tuple of neighbour: (7, 9)
Tuple of neighbour: (6, 10)
Tuple of neighbour: (6, 11)
Tuple of neighbour: (6, 9)
Place (7, 10) does not move.
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (10, 6)
Neighbours: [[11, 6], [11, 5], [11, 7], [10, 7], [10, 5], [9, 6], [9, 7], [9, 5]]
Tuple of neighbour: (11, 6)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (11, 7)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (9, 7)
Checking collision:
Checking collision with place == (10, 6) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 4
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 6
offset: [1, 1]
Proposed move for position (10, 6) is 3
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (5, 8)
Neighbours: [[6, 8], [6, 7], [6, 9], [5, 9], [5, 7], [4, 8], [4, 9], [4, 7]]
Tuple of neighbour: (6, 8)
Tuple of neighbour: (6, 7)
Tuple of neighbour: (6, 9)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 7)
Tuple of neighbour: (4, 8)
Checking collision:
Checking collision with place == (5, 8) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Proposed move for position (5, 8) is 0
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (10, 8)
Neighbours: [[11, 8], [11, 7], [11, 9], [10, 9], [10, 7], [9, 8], [9, 9], [9, 7]]
Tuple of neighbour: (11, 8)
Tuple of neighbour: (11, 7)
Tuple of neighbour: (11, 9)
Tuple of neighbour: (10, 9)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (9, 8)
Tuple of neighbour: (9, 9)
Tuple of neighbour: (9, 7)
Checking collision:
Checking collision with place == (10, 8) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Proposed move for position (10, 8) is 1
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (7, 3)
Neighbours: [[8, 3], [8, 2], [8, 4], [7, 4], [7, 2], [6, 3], [6, 4], [6, 2]]
Tuple of neighbour: (8, 3)
Tuple of neighbour: (8, 2)
Tuple of neighbour: (8, 4)
Tuple of neighbour: (7, 4)
Tuple of neighbour: (7, 2)
Tuple of neighbour: (6, 3)
Checking collision:
Checking collision with place == (7, 3) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Proposed move for position (7, 3) is 1
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (9, 5)
Neighbours: [[10, 5], [10, 4], [10, 6], [9, 6], [9, 4], [8, 5], [8, 6], [8, 4]]
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 6)
Checking collision:
Checking collision with place == (9, 5) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Proposed move for position (9, 5) is 2
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (6, 6)
Neighbours: [[7, 6], [7, 5], [7, 7], [6, 7], [6, 5], [5, 6], [5, 7], [5, 5]]
Tuple of neighbour: (7, 6)
Checking collision:
Checking collision with place == (6, 6) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Proposed move for position (6, 6) is 0
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (3, 4)
Neighbours: [[4, 4], [4, 3], [4, 5], [3, 5], [3, 3], [2, 4], [2, 5], [2, 3]]
Tuple of neighbour: (4, 4)
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 5)
Tuple of neighbour: (3, 5)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (2, 4)
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 3)
Checking collision:
Checking collision with place == (3, 4) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Proposed move for position (3, 4) is 1
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (11, 2)
Neighbours: [[12, 2], [12, 1], [12, 3], [11, 3], [11, 1], [10, 2], [10, 3], [10, 1]]
Tuple of neighbour: (12, 2)
Tuple of neighbour: (12, 1)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (11, 1)
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 1)
Place (11, 2) does not move.
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (2, 7)
Neighbours: [[3, 7], [3, 6], [3, 8], [2, 8], [2, 6], [1, 7], [1, 8], [1, 6]]
Tuple of neighbour: (3, 7)
Tuple of neighbour: (3, 6)
Tuple of neighbour: (3, 8)
Tuple of neighbour: (2, 8)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (1, 7)
Tuple of neighbour: (1, 8)
Tuple of neighbour: (1, 6)
Checking collision:
Checking collision with place == (2, 7) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Proposed move for position (2, 7) is 1
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (6, 3)
Neighbours: [[7, 3], [7, 2], [7, 4], [6, 4], [6, 2], [5, 3], [5, 4], [5, 2]]
Tuple of neighbour: (7, 3)
Checking collision:
Checking collision with place == (6, 3) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Proposed move for position (6, 3) is 1
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (5, 6)
Neighbours: [[6, 6], [6, 5], [6, 7], [5, 7], [5, 5], [4, 6], [4, 7], [4, 5]]
Tuple of neighbour: (6, 6)
Checking collision:
Checking collision with place == (5, 6) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Proposed move for position (5, 6) is 0
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (7, 6)
Neighbours: [[8, 6], [8, 5], [8, 7], [7, 7], [7, 5], [6, 6], [6, 7], [6, 5]]
Tuple of neighbour: (8, 6)
Tuple of neighbour: (8, 5)
Tuple of neighbour: (8, 7)
Tuple of neighbour: (7, 7)
Tuple of neighbour: (7, 5)
Tuple of neighbour: (6, 6)
Checking collision:
Checking collision with place == (7, 6) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Proposed move for position (7, 6) is 0
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (9, 4)
Neighbours: [[10, 4], [10, 3], [10, 5], [9, 5], [9, 3], [8, 4], [8, 5], [8, 3]]
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (9, 5)
Checking collision:
Checking collision with place == (9, 4) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Proposed move for position (9, 4) is 0
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (4, 9)
Neighbours: [[5, 9], [5, 8], [5, 10], [4, 10], [4, 8], [3, 9], [3, 10], [3, 8]]
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 8)
Checking collision:
Checking collision with place == (4, 9) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Proposed move for position (4, 9) is 1
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (4, 8)
Neighbours: [[5, 8], [5, 7], [5, 9], [4, 9], [4, 7], [3, 8], [3, 9], [3, 7]]
Tuple of neighbour: (5, 8)
Checking collision:
Checking collision with place == (4, 8) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Proposed move for position (4, 8) is 0
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (9, 7)
Neighbours: [[10, 7], [10, 6], [10, 8], [9, 8], [9, 6], [8, 7], [8, 8], [8, 6]]
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 6)
Checking collision:
Checking collision with place == (9, 7) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Proposed move for position (9, 7) is 2
Get new place:
coords == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Called check_moving with cur_place (6, 2)
Neighbours: [[7, 2], [7, 1], [7, 3], [6, 3], [6, 1], [5, 2], [5, 3], [5, 1]]
Tuple of neighbour: (7, 2)
Tuple of neighbour: (7, 1)
Checking collision:
Checking collision with place == (6, 2) move_offset== 4 other_elves == {(7, 1): 0, (11, 4): 7, (1, 6): 11, (2, 3): 5, (7, 10): 21, (10, 6): 10, (5, 8): 17, (10, 8): 19, (7, 3): 6, (9, 5): 9, (6, 6): 13, (3, 4): 8, (11, 2): 4, (2, 7): 15, (6, 3): 2, (5, 6): 12, (7, 6): 14, (9, 4): 3, (4, 9): 20, (4, 8): 16, (9, 7): 18, (6, 2): 1}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 4
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 4
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 1]
Proposed move for position (6, 2) is 2
Get new place:
==== 2 =====
Moved places: {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(0, (7, 1))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(11, (1, 6))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(5, (2, 3))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(10, (10, 6))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(17, (5, 8))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(19, (10, 8))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(6, (7, 3))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(9, (9, 5))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(13, (6, 6))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(8, (3, 4))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(15, (2, 7))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(2, (6, 3))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(12, (5, 6))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(14, (7, 6))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(3, (9, 4))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(20, (4, 9))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(16, (4, 8))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(18, (9, 7))]
moved_places == {(7, 0): [(0, (7, 1))], (1, 5): [(11, (1, 6))], (2, 2): [(5, (2, 3))], (11, 6): [(10, (10, 6))], (5, 7): [(17, (5, 8))], (10, 9): [(19, (10, 8))], (7, 4): [(6, (7, 3))], (8, 5): [(9, (9, 5))], (6, 5): [(13, (6, 6))], (3, 5): [(8, (3, 4))], (2, 8): [(15, (2, 7))], (6, 4): [(2, (6, 3))], (5, 5): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (9, 3): [(3, (9, 4))], (4, 10): [(20, (4, 9))], (4, 7): [(16, (4, 8))], (8, 7): [(18, (9, 7))], (5, 2): [(1, (6, 2))]}
element == [(1, (6, 2))]
Loop number: 5
Move count: 5
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (11, 4)
Neighbours: [[12, 4], [12, 3], [12, 5], [11, 5], [11, 3], [10, 4], [10, 5], [10, 3]]
Tuple of neighbour: (12, 4)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 3)
Place (11, 4) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (7, 10)
Neighbours: [[8, 10], [8, 9], [8, 11], [7, 11], [7, 9], [6, 10], [6, 11], [6, 9]]
Tuple of neighbour: (8, 10)
Tuple of neighbour: (8, 9)
Tuple of neighbour: (8, 11)
Tuple of neighbour: (7, 11)
Tuple of neighbour: (7, 9)
Tuple of neighbour: (6, 10)
Tuple of neighbour: (6, 11)
Tuple of neighbour: (6, 9)
Place (7, 10) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (11, 2)
Neighbours: [[12, 2], [12, 1], [12, 3], [11, 3], [11, 1], [10, 2], [10, 3], [10, 1]]
Tuple of neighbour: (12, 2)
Tuple of neighbour: (12, 1)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (11, 1)
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 1)
Place (11, 2) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (7, 0)
Neighbours: [[8, 0], [8, -1], [8, 1], [7, 1], [7, -1], [6, 0], [6, 1], [6, -1]]
Tuple of neighbour: (8, 0)
Tuple of neighbour: (8, -1)
Tuple of neighbour: (8, 1)
Tuple of neighbour: (7, 1)
Tuple of neighbour: (7, -1)
Tuple of neighbour: (6, 0)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, -1)
Place (7, 0) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (1, 5)
Neighbours: [[2, 5], [2, 4], [2, 6], [1, 6], [1, 4], [0, 5], [0, 6], [0, 4]]
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 4)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (1, 6)
Tuple of neighbour: (1, 4)
Tuple of neighbour: (0, 5)
Tuple of neighbour: (0, 6)
Tuple of neighbour: (0, 4)
Place (1, 5) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (2, 2)
Neighbours: [[3, 2], [3, 1], [3, 3], [2, 3], [2, 1], [1, 2], [1, 3], [1, 1]]
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 1)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (2, 3)
Tuple of neighbour: (2, 1)
Tuple of neighbour: (1, 2)
Tuple of neighbour: (1, 3)
Tuple of neighbour: (1, 1)
Place (2, 2) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (11, 6)
Neighbours: [[12, 6], [12, 5], [12, 7], [11, 7], [11, 5], [10, 6], [10, 7], [10, 5]]
Tuple of neighbour: (12, 6)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (12, 7)
Tuple of neighbour: (11, 7)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (10, 6)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 5)
Place (11, 6) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (5, 7)
Neighbours: [[6, 7], [6, 6], [6, 8], [5, 8], [5, 6], [4, 7], [4, 8], [4, 6]]
Tuple of neighbour: (6, 7)
Tuple of neighbour: (6, 6)
Tuple of neighbour: (6, 8)
Tuple of neighbour: (5, 8)
Tuple of neighbour: (5, 6)
Tuple of neighbour: (4, 7)
Checking collision:
Checking collision with place == (5, 7) move_offset== 5 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, 1]
Proposed move for position (5, 7) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (10, 9)
Neighbours: [[11, 9], [11, 8], [11, 10], [10, 10], [10, 8], [9, 9], [9, 10], [9, 8]]
Tuple of neighbour: (11, 9)
Tuple of neighbour: (11, 8)
Tuple of neighbour: (11, 10)
Tuple of neighbour: (10, 10)
Tuple of neighbour: (10, 8)
Tuple of neighbour: (9, 9)
Tuple of neighbour: (9, 10)
Tuple of neighbour: (9, 8)
Place (10, 9) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (7, 4)
Neighbours: [[8, 4], [8, 3], [8, 5], [7, 5], [7, 3], [6, 4], [6, 5], [6, 3]]
Tuple of neighbour: (8, 4)
Tuple of neighbour: (8, 3)
Tuple of neighbour: (8, 5)
Checking collision:
Checking collision with place == (7, 4) move_offset== 5 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 6
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 7
offset: [-1, -1]
Proposed move for position (7, 4) is 3
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (8, 5)
Neighbours: [[9, 5], [9, 4], [9, 6], [8, 6], [8, 4], [7, 5], [7, 6], [7, 4]]
Tuple of neighbour: (9, 5)
Tuple of neighbour: (9, 4)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (8, 6)
Tuple of neighbour: (8, 4)
Tuple of neighbour: (7, 5)
Checking collision:
Checking collision with place == (8, 5) move_offset== 5 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, 1]
Proposed move for position (8, 5) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (6, 5)
Neighbours: [[7, 5], [7, 4], [7, 6], [6, 6], [6, 4], [5, 5], [5, 6], [5, 4]]
Tuple of neighbour: (7, 5)
Checking collision:
Checking collision with place == (6, 5) move_offset== 5 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, 1]
Proposed move for position (6, 5) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (3, 5)
Neighbours: [[4, 5], [4, 4], [4, 6], [3, 6], [3, 4], [2, 5], [2, 6], [2, 4]]
Tuple of neighbour: (4, 5)
Tuple of neighbour: (4, 4)
Tuple of neighbour: (4, 6)
Tuple of neighbour: (3, 6)
Tuple of neighbour: (3, 4)
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (2, 4)
Place (3, 5) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (2, 8)
Neighbours: [[3, 8], [3, 7], [3, 9], [2, 9], [2, 7], [1, 8], [1, 9], [1, 7]]
Tuple of neighbour: (3, 8)
Tuple of neighbour: (3, 7)
Tuple of neighbour: (3, 9)
Tuple of neighbour: (2, 9)
Tuple of neighbour: (2, 7)
Tuple of neighbour: (1, 8)
Tuple of neighbour: (1, 9)
Tuple of neighbour: (1, 7)
Place (2, 8) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (6, 4)
Neighbours: [[7, 4], [7, 3], [7, 5], [6, 5], [6, 3], [5, 4], [5, 5], [5, 3]]
Tuple of neighbour: (7, 4)
Checking collision:
Checking collision with place == (6, 4) move_offset== 5 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 5
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 6
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 5
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 7
offset: [-1, -1]
Proposed move for position (6, 4) is 3
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (5, 5)
Neighbours: [[6, 5], [6, 4], [6, 6], [5, 6], [5, 4], [4, 5], [4, 6], [4, 4]]
Tuple of neighbour: (6, 5)
Checking collision:
Checking collision with place == (5, 5) move_offset== 5 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, 1]
Proposed move for position (5, 5) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (7, 5)
Neighbours: [[8, 5], [8, 4], [8, 6], [7, 6], [7, 4], [6, 5], [6, 6], [6, 4]]
Tuple of neighbour: (8, 5)
Checking collision:
Checking collision with place == (7, 5) move_offset== 5 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, 1]
Proposed move for position (7, 5) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (9, 3)
Neighbours: [[10, 3], [10, 2], [10, 4], [9, 4], [9, 2], [8, 3], [8, 4], [8, 2]]
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (9, 4)
Tuple of neighbour: (9, 2)
Tuple of neighbour: (8, 3)
Tuple of neighbour: (8, 4)
Tuple of neighbour: (8, 2)
Place (9, 3) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (4, 10)
Neighbours: [[5, 10], [5, 9], [5, 11], [4, 11], [4, 9], [3, 10], [3, 11], [3, 9]]
Tuple of neighbour: (5, 10)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 11)
Tuple of neighbour: (4, 11)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (3, 10)
Tuple of neighbour: (3, 11)
Tuple of neighbour: (3, 9)
Place (4, 10) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (4, 7)
Neighbours: [[5, 7], [5, 6], [5, 8], [4, 8], [4, 6], [3, 7], [3, 8], [3, 6]]
Tuple of neighbour: (5, 7)
Checking collision:
Checking collision with place == (4, 7) move_offset== 5 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 5
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, 1]
Proposed move for position (4, 7) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (8, 7)
Neighbours: [[9, 7], [9, 6], [9, 8], [8, 8], [8, 6], [7, 7], [7, 8], [7, 6]]
Tuple of neighbour: (9, 7)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (9, 8)
Tuple of neighbour: (8, 8)
Tuple of neighbour: (8, 6)
Tuple of neighbour: (7, 7)
Tuple of neighbour: (7, 8)
Tuple of neighbour: (7, 6)
Place (8, 7) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (5, 7): 17, (10, 9): 19, (7, 4): 6, (8, 5): 9, (6, 5): 13, (3, 5): 8, (2, 8): 15, (6, 4): 2, (5, 5): 12, (7, 5): 14, (9, 3): 3, (4, 10): 20, (4, 7): 16, (8, 7): 18, (5, 2): 1}
Called check_moving with cur_place (5, 2)
Neighbours: [[6, 2], [6, 1], [6, 3], [5, 3], [5, 1], [4, 2], [4, 3], [4, 1]]
Tuple of neighbour: (6, 2)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, 3)
Tuple of neighbour: (5, 3)
Tuple of neighbour: (5, 1)
Tuple of neighbour: (4, 2)
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 1)
Place (5, 2) does not move.
==== 2 =====
Moved places: {(5, 8): [(17, (5, 7))], (7, 3): [(6, (7, 4))], (8, 6): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (5, 5))], (7, 6): [(14, (7, 5))], (4, 8): [(16, (4, 7))]}
moved_places == {(5, 8): [(17, (5, 7))], (7, 3): [(6, (7, 4))], (8, 6): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (5, 5))], (7, 6): [(14, (7, 5))], (4, 8): [(16, (4, 7))]}
element == [(17, (5, 7))]
moved_places == {(5, 8): [(17, (5, 7))], (7, 3): [(6, (7, 4))], (8, 6): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (5, 5))], (7, 6): [(14, (7, 5))], (4, 8): [(16, (4, 7))]}
element == [(6, (7, 4))]
moved_places == {(5, 8): [(17, (5, 7))], (7, 3): [(6, (7, 4))], (8, 6): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (5, 5))], (7, 6): [(14, (7, 5))], (4, 8): [(16, (4, 7))]}
element == [(9, (8, 5))]
moved_places == {(5, 8): [(17, (5, 7))], (7, 3): [(6, (7, 4))], (8, 6): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (5, 5))], (7, 6): [(14, (7, 5))], (4, 8): [(16, (4, 7))]}
element == [(13, (6, 5))]
moved_places == {(5, 8): [(17, (5, 7))], (7, 3): [(6, (7, 4))], (8, 6): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (5, 5))], (7, 6): [(14, (7, 5))], (4, 8): [(16, (4, 7))]}
element == [(2, (6, 4))]
moved_places == {(5, 8): [(17, (5, 7))], (7, 3): [(6, (7, 4))], (8, 6): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (5, 5))], (7, 6): [(14, (7, 5))], (4, 8): [(16, (4, 7))]}
element == [(12, (5, 5))]
moved_places == {(5, 8): [(17, (5, 7))], (7, 3): [(6, (7, 4))], (8, 6): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (5, 5))], (7, 6): [(14, (7, 5))], (4, 8): [(16, (4, 7))]}
element == [(14, (7, 5))]
moved_places == {(5, 8): [(17, (5, 7))], (7, 3): [(6, (7, 4))], (8, 6): [(9, (8, 5))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (5, 5))], (7, 6): [(14, (7, 5))], (4, 8): [(16, (4, 7))]}
element == [(16, (4, 7))]
Loop number: 6
Move count: 6
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (11, 4)
Neighbours: [[12, 4], [12, 3], [12, 5], [11, 5], [11, 3], [10, 4], [10, 5], [10, 3]]
Tuple of neighbour: (12, 4)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 3)
Place (11, 4) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (7, 10)
Neighbours: [[8, 10], [8, 9], [8, 11], [7, 11], [7, 9], [6, 10], [6, 11], [6, 9]]
Tuple of neighbour: (8, 10)
Tuple of neighbour: (8, 9)
Tuple of neighbour: (8, 11)
Tuple of neighbour: (7, 11)
Tuple of neighbour: (7, 9)
Tuple of neighbour: (6, 10)
Tuple of neighbour: (6, 11)
Tuple of neighbour: (6, 9)
Place (7, 10) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (11, 2)
Neighbours: [[12, 2], [12, 1], [12, 3], [11, 3], [11, 1], [10, 2], [10, 3], [10, 1]]
Tuple of neighbour: (12, 2)
Tuple of neighbour: (12, 1)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (11, 1)
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 1)
Place (11, 2) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (7, 0)
Neighbours: [[8, 0], [8, -1], [8, 1], [7, 1], [7, -1], [6, 0], [6, 1], [6, -1]]
Tuple of neighbour: (8, 0)
Tuple of neighbour: (8, -1)
Tuple of neighbour: (8, 1)
Tuple of neighbour: (7, 1)
Tuple of neighbour: (7, -1)
Tuple of neighbour: (6, 0)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, -1)
Place (7, 0) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (1, 5)
Neighbours: [[2, 5], [2, 4], [2, 6], [1, 6], [1, 4], [0, 5], [0, 6], [0, 4]]
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 4)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (1, 6)
Tuple of neighbour: (1, 4)
Tuple of neighbour: (0, 5)
Tuple of neighbour: (0, 6)
Tuple of neighbour: (0, 4)
Place (1, 5) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (2, 2)
Neighbours: [[3, 2], [3, 1], [3, 3], [2, 3], [2, 1], [1, 2], [1, 3], [1, 1]]
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 1)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (2, 3)
Tuple of neighbour: (2, 1)
Tuple of neighbour: (1, 2)
Tuple of neighbour: (1, 3)
Tuple of neighbour: (1, 1)
Place (2, 2) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (11, 6)
Neighbours: [[12, 6], [12, 5], [12, 7], [11, 7], [11, 5], [10, 6], [10, 7], [10, 5]]
Tuple of neighbour: (12, 6)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (12, 7)
Tuple of neighbour: (11, 7)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (10, 6)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 5)
Place (11, 6) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (10, 9)
Neighbours: [[11, 9], [11, 8], [11, 10], [10, 10], [10, 8], [9, 9], [9, 10], [9, 8]]
Tuple of neighbour: (11, 9)
Tuple of neighbour: (11, 8)
Tuple of neighbour: (11, 10)
Tuple of neighbour: (10, 10)
Tuple of neighbour: (10, 8)
Tuple of neighbour: (9, 9)
Tuple of neighbour: (9, 10)
Tuple of neighbour: (9, 8)
Place (10, 9) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (3, 5)
Neighbours: [[4, 5], [4, 4], [4, 6], [3, 6], [3, 4], [2, 5], [2, 6], [2, 4]]
Tuple of neighbour: (4, 5)
Tuple of neighbour: (4, 4)
Tuple of neighbour: (4, 6)
Tuple of neighbour: (3, 6)
Tuple of neighbour: (3, 4)
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (2, 4)
Place (3, 5) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (2, 8)
Neighbours: [[3, 8], [3, 7], [3, 9], [2, 9], [2, 7], [1, 8], [1, 9], [1, 7]]
Tuple of neighbour: (3, 8)
Tuple of neighbour: (3, 7)
Tuple of neighbour: (3, 9)
Tuple of neighbour: (2, 9)
Tuple of neighbour: (2, 7)
Tuple of neighbour: (1, 8)
Tuple of neighbour: (1, 9)
Tuple of neighbour: (1, 7)
Place (2, 8) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (9, 3)
Neighbours: [[10, 3], [10, 2], [10, 4], [9, 4], [9, 2], [8, 3], [8, 4], [8, 2]]
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (9, 4)
Tuple of neighbour: (9, 2)
Tuple of neighbour: (8, 3)
Tuple of neighbour: (8, 4)
Tuple of neighbour: (8, 2)
Place (9, 3) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (4, 10)
Neighbours: [[5, 10], [5, 9], [5, 11], [4, 11], [4, 9], [3, 10], [3, 11], [3, 9]]
Tuple of neighbour: (5, 10)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 11)
Tuple of neighbour: (4, 11)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (3, 10)
Tuple of neighbour: (3, 11)
Tuple of neighbour: (3, 9)
Place (4, 10) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (8, 7)
Neighbours: [[9, 7], [9, 6], [9, 8], [8, 8], [8, 6], [7, 7], [7, 8], [7, 6]]
Tuple of neighbour: (9, 7)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (9, 8)
Tuple of neighbour: (8, 8)
Tuple of neighbour: (8, 6)
Checking collision:
Checking collision with place == (8, 7) move_offset== 6 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 6
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, 1]
Proposed move for position (8, 7) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (5, 2)
Neighbours: [[6, 2], [6, 1], [6, 3], [5, 3], [5, 1], [4, 2], [4, 3], [4, 1]]
Tuple of neighbour: (6, 2)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, 3)
Checking collision:
Checking collision with place == (5, 2) move_offset== 6 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [-1, 1]
Proposed move for position (5, 2) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (5, 8)
Neighbours: [[6, 8], [6, 7], [6, 9], [5, 9], [5, 7], [4, 8], [4, 9], [4, 7]]
Tuple of neighbour: (6, 8)
Tuple of neighbour: (6, 7)
Tuple of neighbour: (6, 9)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 7)
Tuple of neighbour: (4, 8)
Checking collision:
Checking collision with place == (5, 8) move_offset== 6 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 6
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, 1]
Proposed move for position (5, 8) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (7, 3)
Neighbours: [[8, 3], [8, 2], [8, 4], [7, 4], [7, 2], [6, 3], [6, 4], [6, 2]]
Tuple of neighbour: (8, 3)
Tuple of neighbour: (8, 2)
Tuple of neighbour: (8, 4)
Tuple of neighbour: (7, 4)
Tuple of neighbour: (7, 2)
Tuple of neighbour: (6, 3)
Checking collision:
Checking collision with place == (7, 3) move_offset== 6 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 6
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, 1]
Proposed move for position (7, 3) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (8, 6)
Neighbours: [[9, 6], [9, 5], [9, 7], [8, 7], [8, 5], [7, 6], [7, 7], [7, 5]]
Tuple of neighbour: (9, 6)
Tuple of neighbour: (9, 5)
Tuple of neighbour: (9, 7)
Tuple of neighbour: (8, 7)
Checking collision:
Checking collision with place == (8, 6) move_offset== 6 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 6
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, 1]
Proposed move for position (8, 6) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (6, 6)
Neighbours: [[7, 6], [7, 5], [7, 7], [6, 7], [6, 5], [5, 6], [5, 7], [5, 5]]
Tuple of neighbour: (7, 6)
Checking collision:
Checking collision with place == (6, 6) move_offset== 6 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 6
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 7
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [-1, -1]
Proposed move for position (6, 6) is 2
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (6, 3)
Neighbours: [[7, 3], [7, 2], [7, 4], [6, 4], [6, 2], [5, 3], [5, 4], [5, 2]]
Tuple of neighbour: (7, 3)
Checking collision:
Checking collision with place == (6, 3) move_offset== 6 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 6
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 7
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [-1, 1]
Proposed move for position (6, 3) is 3
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (5, 6)
Neighbours: [[6, 6], [6, 5], [6, 7], [5, 7], [5, 5], [4, 6], [4, 7], [4, 5]]
Tuple of neighbour: (6, 6)
Checking collision:
Checking collision with place == (5, 6) move_offset== 6 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [-1, 1]
Proposed move for position (5, 6) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (7, 6)
Neighbours: [[8, 6], [8, 5], [8, 7], [7, 7], [7, 5], [6, 6], [6, 7], [6, 5]]
Tuple of neighbour: (8, 6)
Checking collision:
Checking collision with place == (7, 6) move_offset== 6 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 6
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 6
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 7
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [-1, -1]
Proposed move for position (7, 6) is 2
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Called check_moving with cur_place (4, 8)
Neighbours: [[5, 8], [5, 7], [5, 9], [4, 9], [4, 7], [3, 8], [3, 9], [3, 7]]
Tuple of neighbour: (5, 8)
Checking collision:
Checking collision with place == (4, 8) move_offset== 6 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (8, 7): 18, (5, 2): 1, (5, 8): 17, (7, 3): 6, (8, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (7, 6): 14, (4, 8): 16}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 6
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [-1, 1]
Proposed move for position (4, 8) is 0
Get new place:
==== 2 =====
Moved places: {(9, 7): [(18, (8, 7))], (4, 2): [(1, (5, 2))], (6, 8): [(17, (5, 8))], (8, 3): [(6, (7, 3))], (9, 6): [(9, (8, 6))], (6, 5): [(13, (6, 6))], (6, 4): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (3, 8): [(16, (4, 8))]}
moved_places == {(9, 7): [(18, (8, 7))], (4, 2): [(1, (5, 2))], (6, 8): [(17, (5, 8))], (8, 3): [(6, (7, 3))], (9, 6): [(9, (8, 6))], (6, 5): [(13, (6, 6))], (6, 4): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (3, 8): [(16, (4, 8))]}
element == [(18, (8, 7))]
moved_places == {(9, 7): [(18, (8, 7))], (4, 2): [(1, (5, 2))], (6, 8): [(17, (5, 8))], (8, 3): [(6, (7, 3))], (9, 6): [(9, (8, 6))], (6, 5): [(13, (6, 6))], (6, 4): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (3, 8): [(16, (4, 8))]}
element == [(1, (5, 2))]
moved_places == {(9, 7): [(18, (8, 7))], (4, 2): [(1, (5, 2))], (6, 8): [(17, (5, 8))], (8, 3): [(6, (7, 3))], (9, 6): [(9, (8, 6))], (6, 5): [(13, (6, 6))], (6, 4): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (3, 8): [(16, (4, 8))]}
element == [(17, (5, 8))]
moved_places == {(9, 7): [(18, (8, 7))], (4, 2): [(1, (5, 2))], (6, 8): [(17, (5, 8))], (8, 3): [(6, (7, 3))], (9, 6): [(9, (8, 6))], (6, 5): [(13, (6, 6))], (6, 4): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (3, 8): [(16, (4, 8))]}
element == [(6, (7, 3))]
moved_places == {(9, 7): [(18, (8, 7))], (4, 2): [(1, (5, 2))], (6, 8): [(17, (5, 8))], (8, 3): [(6, (7, 3))], (9, 6): [(9, (8, 6))], (6, 5): [(13, (6, 6))], (6, 4): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (3, 8): [(16, (4, 8))]}
element == [(9, (8, 6))]
moved_places == {(9, 7): [(18, (8, 7))], (4, 2): [(1, (5, 2))], (6, 8): [(17, (5, 8))], (8, 3): [(6, (7, 3))], (9, 6): [(9, (8, 6))], (6, 5): [(13, (6, 6))], (6, 4): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (3, 8): [(16, (4, 8))]}
element == [(13, (6, 6))]
moved_places == {(9, 7): [(18, (8, 7))], (4, 2): [(1, (5, 2))], (6, 8): [(17, (5, 8))], (8, 3): [(6, (7, 3))], (9, 6): [(9, (8, 6))], (6, 5): [(13, (6, 6))], (6, 4): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (3, 8): [(16, (4, 8))]}
element == [(2, (6, 3))]
moved_places == {(9, 7): [(18, (8, 7))], (4, 2): [(1, (5, 2))], (6, 8): [(17, (5, 8))], (8, 3): [(6, (7, 3))], (9, 6): [(9, (8, 6))], (6, 5): [(13, (6, 6))], (6, 4): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (3, 8): [(16, (4, 8))]}
element == [(12, (5, 6))]
moved_places == {(9, 7): [(18, (8, 7))], (4, 2): [(1, (5, 2))], (6, 8): [(17, (5, 8))], (8, 3): [(6, (7, 3))], (9, 6): [(9, (8, 6))], (6, 5): [(13, (6, 6))], (6, 4): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (3, 8): [(16, (4, 8))]}
element == [(14, (7, 6))]
moved_places == {(9, 7): [(18, (8, 7))], (4, 2): [(1, (5, 2))], (6, 8): [(17, (5, 8))], (8, 3): [(6, (7, 3))], (9, 6): [(9, (8, 6))], (6, 5): [(13, (6, 6))], (6, 4): [(2, (6, 3))], (4, 6): [(12, (5, 6))], (7, 5): [(14, (7, 6))], (3, 8): [(16, (4, 8))]}
element == [(16, (4, 8))]
Loop number: 7
Move count: 7
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (11, 4)
Neighbours: [[12, 4], [12, 3], [12, 5], [11, 5], [11, 3], [10, 4], [10, 5], [10, 3]]
Tuple of neighbour: (12, 4)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 3)
Place (11, 4) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (7, 10)
Neighbours: [[8, 10], [8, 9], [8, 11], [7, 11], [7, 9], [6, 10], [6, 11], [6, 9]]
Tuple of neighbour: (8, 10)
Tuple of neighbour: (8, 9)
Tuple of neighbour: (8, 11)
Tuple of neighbour: (7, 11)
Tuple of neighbour: (7, 9)
Tuple of neighbour: (6, 10)
Tuple of neighbour: (6, 11)
Tuple of neighbour: (6, 9)
Place (7, 10) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (11, 2)
Neighbours: [[12, 2], [12, 1], [12, 3], [11, 3], [11, 1], [10, 2], [10, 3], [10, 1]]
Tuple of neighbour: (12, 2)
Tuple of neighbour: (12, 1)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (11, 1)
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 1)
Place (11, 2) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (7, 0)
Neighbours: [[8, 0], [8, -1], [8, 1], [7, 1], [7, -1], [6, 0], [6, 1], [6, -1]]
Tuple of neighbour: (8, 0)
Tuple of neighbour: (8, -1)
Tuple of neighbour: (8, 1)
Tuple of neighbour: (7, 1)
Tuple of neighbour: (7, -1)
Tuple of neighbour: (6, 0)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, -1)
Place (7, 0) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (1, 5)
Neighbours: [[2, 5], [2, 4], [2, 6], [1, 6], [1, 4], [0, 5], [0, 6], [0, 4]]
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 4)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (1, 6)
Tuple of neighbour: (1, 4)
Tuple of neighbour: (0, 5)
Tuple of neighbour: (0, 6)
Tuple of neighbour: (0, 4)
Place (1, 5) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (2, 2)
Neighbours: [[3, 2], [3, 1], [3, 3], [2, 3], [2, 1], [1, 2], [1, 3], [1, 1]]
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 1)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (2, 3)
Tuple of neighbour: (2, 1)
Tuple of neighbour: (1, 2)
Tuple of neighbour: (1, 3)
Tuple of neighbour: (1, 1)
Place (2, 2) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (11, 6)
Neighbours: [[12, 6], [12, 5], [12, 7], [11, 7], [11, 5], [10, 6], [10, 7], [10, 5]]
Tuple of neighbour: (12, 6)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (12, 7)
Tuple of neighbour: (11, 7)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (10, 6)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 5)
Place (11, 6) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (10, 9)
Neighbours: [[11, 9], [11, 8], [11, 10], [10, 10], [10, 8], [9, 9], [9, 10], [9, 8]]
Tuple of neighbour: (11, 9)
Tuple of neighbour: (11, 8)
Tuple of neighbour: (11, 10)
Tuple of neighbour: (10, 10)
Tuple of neighbour: (10, 8)
Tuple of neighbour: (9, 9)
Tuple of neighbour: (9, 10)
Tuple of neighbour: (9, 8)
Place (10, 9) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (3, 5)
Neighbours: [[4, 5], [4, 4], [4, 6], [3, 6], [3, 4], [2, 5], [2, 6], [2, 4]]
Tuple of neighbour: (4, 5)
Tuple of neighbour: (4, 4)
Tuple of neighbour: (4, 6)
Checking collision:
Checking collision with place == (3, 5) move_offset== 7 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 7
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [-1, -1]
Proposed move for position (3, 5) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (2, 8)
Neighbours: [[3, 8], [3, 7], [3, 9], [2, 9], [2, 7], [1, 8], [1, 9], [1, 7]]
Tuple of neighbour: (3, 8)
Checking collision:
Checking collision with place == (2, 8) move_offset== 7 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 7
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [-1, -1]
Proposed move for position (2, 8) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (9, 3)
Neighbours: [[10, 3], [10, 2], [10, 4], [9, 4], [9, 2], [8, 3], [8, 4], [8, 2]]
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (9, 4)
Tuple of neighbour: (9, 2)
Tuple of neighbour: (8, 3)
Checking collision:
Checking collision with place == (9, 3) move_offset== 7 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
Proposed move for position (9, 3) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (4, 10)
Neighbours: [[5, 10], [5, 9], [5, 11], [4, 11], [4, 9], [3, 10], [3, 11], [3, 9]]
Tuple of neighbour: (5, 10)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 11)
Tuple of neighbour: (4, 11)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (3, 10)
Tuple of neighbour: (3, 11)
Tuple of neighbour: (3, 9)
Place (4, 10) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (9, 7)
Neighbours: [[10, 7], [10, 6], [10, 8], [9, 8], [9, 6], [8, 7], [8, 8], [8, 6]]
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 6)
Tuple of neighbour: (10, 8)
Tuple of neighbour: (9, 8)
Tuple of neighbour: (9, 6)
Checking collision:
Checking collision with place == (9, 7) move_offset== 7 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
Proposed move for position (9, 7) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (4, 2)
Neighbours: [[5, 2], [5, 1], [5, 3], [4, 3], [4, 1], [3, 2], [3, 3], [3, 1]]
Tuple of neighbour: (5, 2)
Tuple of neighbour: (5, 1)
Tuple of neighbour: (5, 3)
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 1)
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (3, 1)
Place (4, 2) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (6, 8)
Neighbours: [[7, 8], [7, 7], [7, 9], [6, 9], [6, 7], [5, 8], [5, 9], [5, 7]]
Tuple of neighbour: (7, 8)
Tuple of neighbour: (7, 7)
Tuple of neighbour: (7, 9)
Tuple of neighbour: (6, 9)
Tuple of neighbour: (6, 7)
Tuple of neighbour: (5, 8)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 7)
Place (6, 8) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (8, 3)
Neighbours: [[9, 3], [9, 2], [9, 4], [8, 4], [8, 2], [7, 3], [7, 4], [7, 2]]
Tuple of neighbour: (9, 3)
Checking collision:
Checking collision with place == (8, 3) move_offset== 7 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 7
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [-1, -1]
Proposed move for position (8, 3) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (9, 6)
Neighbours: [[10, 6], [10, 5], [10, 7], [9, 7], [9, 5], [8, 6], [8, 7], [8, 5]]
Tuple of neighbour: (10, 6)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (9, 7)
Checking collision:
Checking collision with place == (9, 6) move_offset== 7 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
Proposed move for position (9, 6) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (6, 5)
Neighbours: [[7, 5], [7, 4], [7, 6], [6, 6], [6, 4], [5, 5], [5, 6], [5, 4]]
Tuple of neighbour: (7, 5)
Checking collision:
Checking collision with place == (6, 5) move_offset== 7 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 7
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 7
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [-1, 1]
Proposed move for position (6, 5) is 2
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (6, 4)
Neighbours: [[7, 4], [7, 3], [7, 5], [6, 5], [6, 3], [5, 4], [5, 5], [5, 3]]
Tuple of neighbour: (7, 4)
Tuple of neighbour: (7, 3)
Tuple of neighbour: (7, 5)
Checking collision:
Checking collision with place == (6, 4) move_offset== 7 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 7
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [-1, -1]
Proposed move for position (6, 4) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (4, 6)
Neighbours: [[5, 6], [5, 5], [5, 7], [4, 7], [4, 5], [3, 6], [3, 7], [3, 5]]
Tuple of neighbour: (5, 6)
Tuple of neighbour: (5, 5)
Tuple of neighbour: (5, 7)
Tuple of neighbour: (4, 7)
Tuple of neighbour: (4, 5)
Tuple of neighbour: (3, 6)
Tuple of neighbour: (3, 7)
Tuple of neighbour: (3, 5)
Checking collision:
Checking collision with place == (4, 6) move_offset== 7 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
Proposed move for position (4, 6) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (7, 5)
Neighbours: [[8, 5], [8, 4], [8, 6], [7, 6], [7, 4], [6, 5], [6, 6], [6, 4]]
Tuple of neighbour: (8, 5)
Tuple of neighbour: (8, 4)
Tuple of neighbour: (8, 6)
Tuple of neighbour: (7, 6)
Tuple of neighbour: (7, 4)
Tuple of neighbour: (6, 5)
Checking collision:
Checking collision with place == (7, 5) move_offset== 7 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
Proposed move for position (7, 5) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Called check_moving with cur_place (3, 8)
Neighbours: [[4, 8], [4, 7], [4, 9], [3, 9], [3, 7], [2, 8], [2, 9], [2, 7]]
Tuple of neighbour: (4, 8)
Tuple of neighbour: (4, 7)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (3, 9)
Tuple of neighbour: (3, 7)
Tuple of neighbour: (2, 8)
Checking collision:
Checking collision with place == (3, 8) move_offset== 7 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (3, 5): 8, (2, 8): 15, (9, 3): 3, (4, 10): 20, (9, 7): 18, (4, 2): 1, (6, 8): 17, (8, 3): 6, (9, 6): 9, (6, 5): 13, (6, 4): 2, (4, 6): 12, (7, 5): 14, (3, 8): 16}
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 7
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 8
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
Proposed move for position (3, 8) is 0
Get new place:
==== 2 =====
Moved places: {(3, 4): [(8, (3, 5))], (2, 7): [(15, (2, 8))], (10, 3): [(3, (9, 3))], (10, 7): [(18, (9, 7))], (8, 2): [(6, (8, 3))], (10, 6): [(9, (9, 6))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (4, 6))], (8, 5): [(14, (7, 5))], (4, 8): [(16, (3, 8))]}
moved_places == {(3, 4): [(8, (3, 5))], (2, 7): [(15, (2, 8))], (10, 3): [(3, (9, 3))], (10, 7): [(18, (9, 7))], (8, 2): [(6, (8, 3))], (10, 6): [(9, (9, 6))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (4, 6))], (8, 5): [(14, (7, 5))], (4, 8): [(16, (3, 8))]}
element == [(8, (3, 5))]
moved_places == {(3, 4): [(8, (3, 5))], (2, 7): [(15, (2, 8))], (10, 3): [(3, (9, 3))], (10, 7): [(18, (9, 7))], (8, 2): [(6, (8, 3))], (10, 6): [(9, (9, 6))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (4, 6))], (8, 5): [(14, (7, 5))], (4, 8): [(16, (3, 8))]}
element == [(15, (2, 8))]
moved_places == {(3, 4): [(8, (3, 5))], (2, 7): [(15, (2, 8))], (10, 3): [(3, (9, 3))], (10, 7): [(18, (9, 7))], (8, 2): [(6, (8, 3))], (10, 6): [(9, (9, 6))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (4, 6))], (8, 5): [(14, (7, 5))], (4, 8): [(16, (3, 8))]}
element == [(3, (9, 3))]
moved_places == {(3, 4): [(8, (3, 5))], (2, 7): [(15, (2, 8))], (10, 3): [(3, (9, 3))], (10, 7): [(18, (9, 7))], (8, 2): [(6, (8, 3))], (10, 6): [(9, (9, 6))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (4, 6))], (8, 5): [(14, (7, 5))], (4, 8): [(16, (3, 8))]}
element == [(18, (9, 7))]
moved_places == {(3, 4): [(8, (3, 5))], (2, 7): [(15, (2, 8))], (10, 3): [(3, (9, 3))], (10, 7): [(18, (9, 7))], (8, 2): [(6, (8, 3))], (10, 6): [(9, (9, 6))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (4, 6))], (8, 5): [(14, (7, 5))], (4, 8): [(16, (3, 8))]}
element == [(6, (8, 3))]
moved_places == {(3, 4): [(8, (3, 5))], (2, 7): [(15, (2, 8))], (10, 3): [(3, (9, 3))], (10, 7): [(18, (9, 7))], (8, 2): [(6, (8, 3))], (10, 6): [(9, (9, 6))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (4, 6))], (8, 5): [(14, (7, 5))], (4, 8): [(16, (3, 8))]}
element == [(9, (9, 6))]
moved_places == {(3, 4): [(8, (3, 5))], (2, 7): [(15, (2, 8))], (10, 3): [(3, (9, 3))], (10, 7): [(18, (9, 7))], (8, 2): [(6, (8, 3))], (10, 6): [(9, (9, 6))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (4, 6))], (8, 5): [(14, (7, 5))], (4, 8): [(16, (3, 8))]}
element == [(13, (6, 5))]
moved_places == {(3, 4): [(8, (3, 5))], (2, 7): [(15, (2, 8))], (10, 3): [(3, (9, 3))], (10, 7): [(18, (9, 7))], (8, 2): [(6, (8, 3))], (10, 6): [(9, (9, 6))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (4, 6))], (8, 5): [(14, (7, 5))], (4, 8): [(16, (3, 8))]}
element == [(2, (6, 4))]
moved_places == {(3, 4): [(8, (3, 5))], (2, 7): [(15, (2, 8))], (10, 3): [(3, (9, 3))], (10, 7): [(18, (9, 7))], (8, 2): [(6, (8, 3))], (10, 6): [(9, (9, 6))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (4, 6))], (8, 5): [(14, (7, 5))], (4, 8): [(16, (3, 8))]}
element == [(12, (4, 6))]
moved_places == {(3, 4): [(8, (3, 5))], (2, 7): [(15, (2, 8))], (10, 3): [(3, (9, 3))], (10, 7): [(18, (9, 7))], (8, 2): [(6, (8, 3))], (10, 6): [(9, (9, 6))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (4, 6))], (8, 5): [(14, (7, 5))], (4, 8): [(16, (3, 8))]}
element == [(14, (7, 5))]
moved_places == {(3, 4): [(8, (3, 5))], (2, 7): [(15, (2, 8))], (10, 3): [(3, (9, 3))], (10, 7): [(18, (9, 7))], (8, 2): [(6, (8, 3))], (10, 6): [(9, (9, 6))], (6, 6): [(13, (6, 5))], (6, 3): [(2, (6, 4))], (5, 6): [(12, (4, 6))], (8, 5): [(14, (7, 5))], (4, 8): [(16, (3, 8))]}
element == [(16, (3, 8))]
Loop number: 8
Move count: 8
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (11, 4)
Neighbours: [[12, 4], [12, 3], [12, 5], [11, 5], [11, 3], [10, 4], [10, 5], [10, 3]]
Tuple of neighbour: (12, 4)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 3)
Checking collision:
Checking collision with place == (11, 4) move_offset== 8 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 10
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, 1]
Proposed move for position (11, 4) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (7, 10)
Neighbours: [[8, 10], [8, 9], [8, 11], [7, 11], [7, 9], [6, 10], [6, 11], [6, 9]]
Tuple of neighbour: (8, 10)
Tuple of neighbour: (8, 9)
Tuple of neighbour: (8, 11)
Tuple of neighbour: (7, 11)
Tuple of neighbour: (7, 9)
Tuple of neighbour: (6, 10)
Tuple of neighbour: (6, 11)
Tuple of neighbour: (6, 9)
Place (7, 10) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (11, 2)
Neighbours: [[12, 2], [12, 1], [12, 3], [11, 3], [11, 1], [10, 2], [10, 3], [10, 1]]
Tuple of neighbour: (12, 2)
Tuple of neighbour: (12, 1)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (11, 1)
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 3)
Checking collision:
Checking collision with place == (11, 2) move_offset== 8 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 10
offset: [-1, -1]
Proposed move for position (11, 2) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (7, 0)
Neighbours: [[8, 0], [8, -1], [8, 1], [7, 1], [7, -1], [6, 0], [6, 1], [6, -1]]
Tuple of neighbour: (8, 0)
Tuple of neighbour: (8, -1)
Tuple of neighbour: (8, 1)
Tuple of neighbour: (7, 1)
Tuple of neighbour: (7, -1)
Tuple of neighbour: (6, 0)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, -1)
Place (7, 0) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (1, 5)
Neighbours: [[2, 5], [2, 4], [2, 6], [1, 6], [1, 4], [0, 5], [0, 6], [0, 4]]
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 4)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (1, 6)
Tuple of neighbour: (1, 4)
Tuple of neighbour: (0, 5)
Tuple of neighbour: (0, 6)
Tuple of neighbour: (0, 4)
Place (1, 5) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (2, 2)
Neighbours: [[3, 2], [3, 1], [3, 3], [2, 3], [2, 1], [1, 2], [1, 3], [1, 1]]
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 1)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (2, 3)
Tuple of neighbour: (2, 1)
Tuple of neighbour: (1, 2)
Tuple of neighbour: (1, 3)
Tuple of neighbour: (1, 1)
Place (2, 2) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (11, 6)
Neighbours: [[12, 6], [12, 5], [12, 7], [11, 7], [11, 5], [10, 6], [10, 7], [10, 5]]
Tuple of neighbour: (12, 6)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (12, 7)
Tuple of neighbour: (11, 7)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (10, 6)
Checking collision:
Checking collision with place == (11, 6) move_offset== 8 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 10
offset: [-1, -1]
Proposed move for position (11, 6) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (10, 9)
Neighbours: [[11, 9], [11, 8], [11, 10], [10, 10], [10, 8], [9, 9], [9, 10], [9, 8]]
Tuple of neighbour: (11, 9)
Tuple of neighbour: (11, 8)
Tuple of neighbour: (11, 10)
Tuple of neighbour: (10, 10)
Tuple of neighbour: (10, 8)
Tuple of neighbour: (9, 9)
Tuple of neighbour: (9, 10)
Tuple of neighbour: (9, 8)
Place (10, 9) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (4, 10)
Neighbours: [[5, 10], [5, 9], [5, 11], [4, 11], [4, 9], [3, 10], [3, 11], [3, 9]]
Tuple of neighbour: (5, 10)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 11)
Tuple of neighbour: (4, 11)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (3, 10)
Tuple of neighbour: (3, 11)
Tuple of neighbour: (3, 9)
Place (4, 10) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (4, 2)
Neighbours: [[5, 2], [5, 1], [5, 3], [4, 3], [4, 1], [3, 2], [3, 3], [3, 1]]
Tuple of neighbour: (5, 2)
Tuple of neighbour: (5, 1)
Tuple of neighbour: (5, 3)
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 1)
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (3, 1)
Place (4, 2) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (6, 8)
Neighbours: [[7, 8], [7, 7], [7, 9], [6, 9], [6, 7], [5, 8], [5, 9], [5, 7]]
Tuple of neighbour: (7, 8)
Tuple of neighbour: (7, 7)
Tuple of neighbour: (7, 9)
Tuple of neighbour: (6, 9)
Tuple of neighbour: (6, 7)
Tuple of neighbour: (5, 8)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 7)
Place (6, 8) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (3, 4)
Neighbours: [[4, 4], [4, 3], [4, 5], [3, 5], [3, 3], [2, 4], [2, 5], [2, 3]]
Tuple of neighbour: (4, 4)
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 5)
Tuple of neighbour: (3, 5)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (2, 4)
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 3)
Place (3, 4) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (2, 7)
Neighbours: [[3, 7], [3, 6], [3, 8], [2, 8], [2, 6], [1, 7], [1, 8], [1, 6]]
Tuple of neighbour: (3, 7)
Tuple of neighbour: (3, 6)
Tuple of neighbour: (3, 8)
Tuple of neighbour: (2, 8)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (1, 7)
Tuple of neighbour: (1, 8)
Tuple of neighbour: (1, 6)
Place (2, 7) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (10, 3)
Neighbours: [[11, 3], [11, 2], [11, 4], [10, 4], [10, 2], [9, 3], [9, 4], [9, 2]]
Tuple of neighbour: (11, 3)
Tuple of neighbour: (11, 2)
Checking collision:
Checking collision with place == (10, 3) move_offset== 8 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 10
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, 1]
Proposed move for position (10, 3) is 2
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (10, 7)
Neighbours: [[11, 7], [11, 6], [11, 8], [10, 8], [10, 6], [9, 7], [9, 8], [9, 6]]
Tuple of neighbour: (11, 7)
Tuple of neighbour: (11, 6)
Checking collision:
Checking collision with place == (10, 7) move_offset== 8 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 10
offset: [-1, -1]
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 8
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, 1]
Proposed move for position (10, 7) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (8, 2)
Neighbours: [[9, 2], [9, 1], [9, 3], [8, 3], [8, 1], [7, 2], [7, 3], [7, 1]]
Tuple of neighbour: (9, 2)
Tuple of neighbour: (9, 1)
Tuple of neighbour: (9, 3)
Tuple of neighbour: (8, 3)
Tuple of neighbour: (8, 1)
Tuple of neighbour: (7, 2)
Tuple of neighbour: (7, 3)
Tuple of neighbour: (7, 1)
Place (8, 2) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (10, 6)
Neighbours: [[11, 6], [11, 5], [11, 7], [10, 7], [10, 5], [9, 6], [9, 7], [9, 5]]
Tuple of neighbour: (11, 6)
Checking collision:
Checking collision with place == (10, 6) move_offset== 8 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 10
offset: [-1, -1]
Proposed move for position (10, 6) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (6, 6)
Neighbours: [[7, 6], [7, 5], [7, 7], [6, 7], [6, 5], [5, 6], [5, 7], [5, 5]]
Tuple of neighbour: (7, 6)
Tuple of neighbour: (7, 5)
Tuple of neighbour: (7, 7)
Tuple of neighbour: (6, 7)
Tuple of neighbour: (6, 5)
Tuple of neighbour: (5, 6)
Checking collision:
Checking collision with place == (6, 6) move_offset== 8 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 10
offset: [-1, -1]
Proposed move for position (6, 6) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (6, 3)
Neighbours: [[7, 3], [7, 2], [7, 4], [6, 4], [6, 2], [5, 3], [5, 4], [5, 2]]
Tuple of neighbour: (7, 3)
Tuple of neighbour: (7, 2)
Tuple of neighbour: (7, 4)
Tuple of neighbour: (6, 4)
Tuple of neighbour: (6, 2)
Tuple of neighbour: (5, 3)
Tuple of neighbour: (5, 4)
Tuple of neighbour: (5, 2)
Place (6, 3) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (5, 6)
Neighbours: [[6, 6], [6, 5], [6, 7], [5, 7], [5, 5], [4, 6], [4, 7], [4, 5]]
Tuple of neighbour: (6, 6)
Checking collision:
Checking collision with place == (5, 6) move_offset== 8 other_elves == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Thing: [[0, -1], [1, -1], [-1, -1]]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 8
offset: [0, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 9
offset: [1, -1]
thing == [[0, -1], [1, -1], [-1, -1]]
(offset_count+move_offset) == 10
offset: [-1, -1]
Proposed move for position (5, 6) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (8, 5)
Neighbours: [[9, 5], [9, 4], [9, 6], [8, 6], [8, 4], [7, 5], [7, 6], [7, 4]]
Tuple of neighbour: (9, 5)
Tuple of neighbour: (9, 4)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (8, 6)
Tuple of neighbour: (8, 4)
Tuple of neighbour: (7, 5)
Tuple of neighbour: (7, 6)
Tuple of neighbour: (7, 4)
Place (8, 5) does not move.
coords == {(11, 4): 7, (7, 10): 21, (11, 2): 4, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (10, 3): 3, (10, 7): 18, (8, 2): 6, (10, 6): 9, (6, 6): 13, (6, 3): 2, (5, 6): 12, (8, 5): 14, (4, 8): 16}
Called check_moving with cur_place (4, 8)
Neighbours: [[5, 8], [5, 7], [5, 9], [4, 9], [4, 7], [3, 8], [3, 9], [3, 7]]
Tuple of neighbour: (5, 8)
Tuple of neighbour: (5, 7)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (4, 7)
Tuple of neighbour: (3, 8)
Tuple of neighbour: (3, 9)
Tuple of neighbour: (3, 7)
Place (4, 8) does not move.
==== 2 =====
Moved places: {(11, 5): [(7, (11, 4)), (10, (11, 6))], (11, 1): [(4, (11, 2))], (9, 3): [(3, (10, 3))], (10, 8): [(18, (10, 7))], (10, 5): [(9, (10, 6))], (6, 5): [(13, (6, 6))], (5, 5): [(12, (5, 6))]}
moved_places == {(11, 5): [(7, (11, 4)), (10, (11, 6))], (11, 1): [(4, (11, 2))], (9, 3): [(3, (10, 3))], (10, 8): [(18, (10, 7))], (10, 5): [(9, (10, 6))], (6, 5): [(13, (6, 6))], (5, 5): [(12, (5, 6))]}
element == [(7, (11, 4)), (10, (11, 6))]
moved_places == {(11, 5): [(7, (11, 4)), (10, (11, 6))], (11, 1): [(4, (11, 2))], (9, 3): [(3, (10, 3))], (10, 8): [(18, (10, 7))], (10, 5): [(9, (10, 6))], (6, 5): [(13, (6, 6))], (5, 5): [(12, (5, 6))]}
element == [(7, (11, 4)), (10, (11, 6))]
moved_places == {(11, 5): [(7, (11, 4)), (10, (11, 6))], (11, 1): [(4, (11, 2))], (9, 3): [(3, (10, 3))], (10, 8): [(18, (10, 7))], (10, 5): [(9, (10, 6))], (6, 5): [(13, (6, 6))], (5, 5): [(12, (5, 6))]}
element == [(4, (11, 2))]
moved_places == {(11, 5): [(7, (11, 4)), (10, (11, 6))], (11, 1): [(4, (11, 2))], (9, 3): [(3, (10, 3))], (10, 8): [(18, (10, 7))], (10, 5): [(9, (10, 6))], (6, 5): [(13, (6, 6))], (5, 5): [(12, (5, 6))]}
element == [(3, (10, 3))]
moved_places == {(11, 5): [(7, (11, 4)), (10, (11, 6))], (11, 1): [(4, (11, 2))], (9, 3): [(3, (10, 3))], (10, 8): [(18, (10, 7))], (10, 5): [(9, (10, 6))], (6, 5): [(13, (6, 6))], (5, 5): [(12, (5, 6))]}
element == [(18, (10, 7))]
moved_places == {(11, 5): [(7, (11, 4)), (10, (11, 6))], (11, 1): [(4, (11, 2))], (9, 3): [(3, (10, 3))], (10, 8): [(18, (10, 7))], (10, 5): [(9, (10, 6))], (6, 5): [(13, (6, 6))], (5, 5): [(12, (5, 6))]}
element == [(9, (10, 6))]
moved_places == {(11, 5): [(7, (11, 4)), (10, (11, 6))], (11, 1): [(4, (11, 2))], (9, 3): [(3, (10, 3))], (10, 8): [(18, (10, 7))], (10, 5): [(9, (10, 6))], (6, 5): [(13, (6, 6))], (5, 5): [(12, (5, 6))]}
element == [(13, (6, 6))]
moved_places == {(11, 5): [(7, (11, 4)), (10, (11, 6))], (11, 1): [(4, (11, 2))], (9, 3): [(3, (10, 3))], (10, 8): [(18, (10, 7))], (10, 5): [(9, (10, 6))], (6, 5): [(13, (6, 6))], (5, 5): [(12, (5, 6))]}
element == [(12, (5, 6))]
Loop number: 9
Move count: 9
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (11, 4)
Neighbours: [[12, 4], [12, 3], [12, 5], [11, 5], [11, 3], [10, 4], [10, 5], [10, 3]]
Tuple of neighbour: (12, 4)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (11, 3)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 5)
Checking collision:
Checking collision with place == (11, 4) move_offset== 9 other_elves == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 9
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 10
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 11
offset: [1, 1]
Proposed move for position (11, 4) is 2
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (7, 10)
Neighbours: [[8, 10], [8, 9], [8, 11], [7, 11], [7, 9], [6, 10], [6, 11], [6, 9]]
Tuple of neighbour: (8, 10)
Tuple of neighbour: (8, 9)
Tuple of neighbour: (8, 11)
Tuple of neighbour: (7, 11)
Tuple of neighbour: (7, 9)
Tuple of neighbour: (6, 10)
Tuple of neighbour: (6, 11)
Tuple of neighbour: (6, 9)
Place (7, 10) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (7, 0)
Neighbours: [[8, 0], [8, -1], [8, 1], [7, 1], [7, -1], [6, 0], [6, 1], [6, -1]]
Tuple of neighbour: (8, 0)
Tuple of neighbour: (8, -1)
Tuple of neighbour: (8, 1)
Tuple of neighbour: (7, 1)
Tuple of neighbour: (7, -1)
Tuple of neighbour: (6, 0)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, -1)
Place (7, 0) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (1, 5)
Neighbours: [[2, 5], [2, 4], [2, 6], [1, 6], [1, 4], [0, 5], [0, 6], [0, 4]]
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 4)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (1, 6)
Tuple of neighbour: (1, 4)
Tuple of neighbour: (0, 5)
Tuple of neighbour: (0, 6)
Tuple of neighbour: (0, 4)
Place (1, 5) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (2, 2)
Neighbours: [[3, 2], [3, 1], [3, 3], [2, 3], [2, 1], [1, 2], [1, 3], [1, 1]]
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 1)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (2, 3)
Tuple of neighbour: (2, 1)
Tuple of neighbour: (1, 2)
Tuple of neighbour: (1, 3)
Tuple of neighbour: (1, 1)
Place (2, 2) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (11, 6)
Neighbours: [[12, 6], [12, 5], [12, 7], [11, 7], [11, 5], [10, 6], [10, 7], [10, 5]]
Tuple of neighbour: (12, 6)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (12, 7)
Tuple of neighbour: (11, 7)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (10, 6)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 5)
Checking collision:
Checking collision with place == (11, 6) move_offset== 9 other_elves == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Proposed move for position (11, 6) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (10, 9)
Neighbours: [[11, 9], [11, 8], [11, 10], [10, 10], [10, 8], [9, 9], [9, 10], [9, 8]]
Tuple of neighbour: (11, 9)
Tuple of neighbour: (11, 8)
Tuple of neighbour: (11, 10)
Tuple of neighbour: (10, 10)
Tuple of neighbour: (10, 8)
Checking collision:
Checking collision with place == (10, 9) move_offset== 9 other_elves == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Proposed move for position (10, 9) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (4, 10)
Neighbours: [[5, 10], [5, 9], [5, 11], [4, 11], [4, 9], [3, 10], [3, 11], [3, 9]]
Tuple of neighbour: (5, 10)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 11)
Tuple of neighbour: (4, 11)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (3, 10)
Tuple of neighbour: (3, 11)
Tuple of neighbour: (3, 9)
Place (4, 10) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (4, 2)
Neighbours: [[5, 2], [5, 1], [5, 3], [4, 3], [4, 1], [3, 2], [3, 3], [3, 1]]
Tuple of neighbour: (5, 2)
Tuple of neighbour: (5, 1)
Tuple of neighbour: (5, 3)
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 1)
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (3, 1)
Place (4, 2) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (6, 8)
Neighbours: [[7, 8], [7, 7], [7, 9], [6, 9], [6, 7], [5, 8], [5, 9], [5, 7]]
Tuple of neighbour: (7, 8)
Tuple of neighbour: (7, 7)
Tuple of neighbour: (7, 9)
Tuple of neighbour: (6, 9)
Tuple of neighbour: (6, 7)
Tuple of neighbour: (5, 8)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 7)
Place (6, 8) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (3, 4)
Neighbours: [[4, 4], [4, 3], [4, 5], [3, 5], [3, 3], [2, 4], [2, 5], [2, 3]]
Tuple of neighbour: (4, 4)
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 5)
Tuple of neighbour: (3, 5)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (2, 4)
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 3)
Place (3, 4) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (2, 7)
Neighbours: [[3, 7], [3, 6], [3, 8], [2, 8], [2, 6], [1, 7], [1, 8], [1, 6]]
Tuple of neighbour: (3, 7)
Tuple of neighbour: (3, 6)
Tuple of neighbour: (3, 8)
Tuple of neighbour: (2, 8)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (1, 7)
Tuple of neighbour: (1, 8)
Tuple of neighbour: (1, 6)
Place (2, 7) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (8, 2)
Neighbours: [[9, 2], [9, 1], [9, 3], [8, 3], [8, 1], [7, 2], [7, 3], [7, 1]]
Tuple of neighbour: (9, 2)
Tuple of neighbour: (9, 1)
Tuple of neighbour: (9, 3)
Checking collision:
Checking collision with place == (8, 2) move_offset== 9 other_elves == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Proposed move for position (8, 2) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (6, 3)
Neighbours: [[7, 3], [7, 2], [7, 4], [6, 4], [6, 2], [5, 3], [5, 4], [5, 2]]
Tuple of neighbour: (7, 3)
Tuple of neighbour: (7, 2)
Tuple of neighbour: (7, 4)
Tuple of neighbour: (6, 4)
Tuple of neighbour: (6, 2)
Tuple of neighbour: (5, 3)
Tuple of neighbour: (5, 4)
Tuple of neighbour: (5, 2)
Place (6, 3) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (8, 5)
Neighbours: [[9, 5], [9, 4], [9, 6], [8, 6], [8, 4], [7, 5], [7, 6], [7, 4]]
Tuple of neighbour: (9, 5)
Tuple of neighbour: (9, 4)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (8, 6)
Tuple of neighbour: (8, 4)
Tuple of neighbour: (7, 5)
Tuple of neighbour: (7, 6)
Tuple of neighbour: (7, 4)
Place (8, 5) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (4, 8)
Neighbours: [[5, 8], [5, 7], [5, 9], [4, 9], [4, 7], [3, 8], [3, 9], [3, 7]]
Tuple of neighbour: (5, 8)
Tuple of neighbour: (5, 7)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (4, 7)
Tuple of neighbour: (3, 8)
Tuple of neighbour: (3, 9)
Tuple of neighbour: (3, 7)
Place (4, 8) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (11, 1)
Neighbours: [[12, 1], [12, 0], [12, 2], [11, 2], [11, 0], [10, 1], [10, 2], [10, 0]]
Tuple of neighbour: (12, 1)
Tuple of neighbour: (12, 0)
Tuple of neighbour: (12, 2)
Tuple of neighbour: (11, 2)
Tuple of neighbour: (11, 0)
Tuple of neighbour: (10, 1)
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 0)
Place (11, 1) does not move.
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (9, 3)
Neighbours: [[10, 3], [10, 2], [10, 4], [9, 4], [9, 2], [8, 3], [8, 4], [8, 2]]
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (9, 4)
Tuple of neighbour: (9, 2)
Tuple of neighbour: (8, 3)
Tuple of neighbour: (8, 4)
Tuple of neighbour: (8, 2)
Checking collision:
Checking collision with place == (9, 3) move_offset== 9 other_elves == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Proposed move for position (9, 3) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (10, 8)
Neighbours: [[11, 8], [11, 7], [11, 9], [10, 9], [10, 7], [9, 8], [9, 9], [9, 7]]
Tuple of neighbour: (11, 8)
Tuple of neighbour: (11, 7)
Tuple of neighbour: (11, 9)
Tuple of neighbour: (10, 9)
Checking collision:
Checking collision with place == (10, 8) move_offset== 9 other_elves == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Proposed move for position (10, 8) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (10, 5)
Neighbours: [[11, 5], [11, 4], [11, 6], [10, 6], [10, 4], [9, 5], [9, 6], [9, 4]]
Tuple of neighbour: (11, 5)
Tuple of neighbour: (11, 4)
Checking collision:
Checking collision with place == (10, 5) move_offset== 9 other_elves == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Proposed move for position (10, 5) is 1
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (6, 5)
Neighbours: [[7, 5], [7, 4], [7, 6], [6, 6], [6, 4], [5, 5], [5, 6], [5, 4]]
Tuple of neighbour: (7, 5)
Tuple of neighbour: (7, 4)
Tuple of neighbour: (7, 6)
Tuple of neighbour: (6, 6)
Tuple of neighbour: (6, 4)
Tuple of neighbour: (5, 5)
Checking collision:
Checking collision with place == (6, 5) move_offset== 9 other_elves == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Proposed move for position (6, 5) is 0
Get new place:
coords == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Called check_moving with cur_place (5, 5)
Neighbours: [[6, 5], [6, 4], [6, 6], [5, 6], [5, 4], [4, 5], [4, 6], [4, 4]]
Tuple of neighbour: (6, 5)
Checking collision:
Checking collision with place == (5, 5) move_offset== 9 other_elves == {(11, 4): 7, (7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (11, 6): 10, (10, 9): 19, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (8, 2): 6, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (9, 3): 3, (10, 8): 18, (10, 5): 9, (6, 5): 13, (5, 5): 12}
Thing: [[0, 1], [1, 1], [-1, 1]]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 9
offset: [0, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [1, 1]
thing == [[0, 1], [1, 1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, 1]
Proposed move for position (5, 5) is 0
Get new place:
==== 2 =====
Moved places: {(12, 4): [(7, (11, 4))], (11, 7): [(10, (11, 6))], (10, 10): [(19, (10, 9))], (7, 2): [(6, (8, 2))], (9, 4): [(3, (9, 3))], (9, 8): [(18, (10, 8))], (9, 5): [(9, (10, 5))], (6, 6): [(13, (6, 5))], (5, 6): [(12, (5, 5))]}
moved_places == {(12, 4): [(7, (11, 4))], (11, 7): [(10, (11, 6))], (10, 10): [(19, (10, 9))], (7, 2): [(6, (8, 2))], (9, 4): [(3, (9, 3))], (9, 8): [(18, (10, 8))], (9, 5): [(9, (10, 5))], (6, 6): [(13, (6, 5))], (5, 6): [(12, (5, 5))]}
element == [(7, (11, 4))]
moved_places == {(12, 4): [(7, (11, 4))], (11, 7): [(10, (11, 6))], (10, 10): [(19, (10, 9))], (7, 2): [(6, (8, 2))], (9, 4): [(3, (9, 3))], (9, 8): [(18, (10, 8))], (9, 5): [(9, (10, 5))], (6, 6): [(13, (6, 5))], (5, 6): [(12, (5, 5))]}
element == [(10, (11, 6))]
moved_places == {(12, 4): [(7, (11, 4))], (11, 7): [(10, (11, 6))], (10, 10): [(19, (10, 9))], (7, 2): [(6, (8, 2))], (9, 4): [(3, (9, 3))], (9, 8): [(18, (10, 8))], (9, 5): [(9, (10, 5))], (6, 6): [(13, (6, 5))], (5, 6): [(12, (5, 5))]}
element == [(19, (10, 9))]
moved_places == {(12, 4): [(7, (11, 4))], (11, 7): [(10, (11, 6))], (10, 10): [(19, (10, 9))], (7, 2): [(6, (8, 2))], (9, 4): [(3, (9, 3))], (9, 8): [(18, (10, 8))], (9, 5): [(9, (10, 5))], (6, 6): [(13, (6, 5))], (5, 6): [(12, (5, 5))]}
element == [(6, (8, 2))]
moved_places == {(12, 4): [(7, (11, 4))], (11, 7): [(10, (11, 6))], (10, 10): [(19, (10, 9))], (7, 2): [(6, (8, 2))], (9, 4): [(3, (9, 3))], (9, 8): [(18, (10, 8))], (9, 5): [(9, (10, 5))], (6, 6): [(13, (6, 5))], (5, 6): [(12, (5, 5))]}
element == [(3, (9, 3))]
moved_places == {(12, 4): [(7, (11, 4))], (11, 7): [(10, (11, 6))], (10, 10): [(19, (10, 9))], (7, 2): [(6, (8, 2))], (9, 4): [(3, (9, 3))], (9, 8): [(18, (10, 8))], (9, 5): [(9, (10, 5))], (6, 6): [(13, (6, 5))], (5, 6): [(12, (5, 5))]}
element == [(18, (10, 8))]
moved_places == {(12, 4): [(7, (11, 4))], (11, 7): [(10, (11, 6))], (10, 10): [(19, (10, 9))], (7, 2): [(6, (8, 2))], (9, 4): [(3, (9, 3))], (9, 8): [(18, (10, 8))], (9, 5): [(9, (10, 5))], (6, 6): [(13, (6, 5))], (5, 6): [(12, (5, 5))]}
element == [(9, (10, 5))]
moved_places == {(12, 4): [(7, (11, 4))], (11, 7): [(10, (11, 6))], (10, 10): [(19, (10, 9))], (7, 2): [(6, (8, 2))], (9, 4): [(3, (9, 3))], (9, 8): [(18, (10, 8))], (9, 5): [(9, (10, 5))], (6, 6): [(13, (6, 5))], (5, 6): [(12, (5, 5))]}
element == [(13, (6, 5))]
moved_places == {(12, 4): [(7, (11, 4))], (11, 7): [(10, (11, 6))], (10, 10): [(19, (10, 9))], (7, 2): [(6, (8, 2))], (9, 4): [(3, (9, 3))], (9, 8): [(18, (10, 8))], (9, 5): [(9, (10, 5))], (6, 6): [(13, (6, 5))], (5, 6): [(12, (5, 5))]}
element == [(12, (5, 5))]
Loop number: 10
Move count: 10
[[1 1 1 1 1 1 1 0 1 1 1 1 1 1]
 [1 1 1 1 1 1 1 1 1 1 1 0 1 1]
 [1 1 0 1 0 1 1 0 1 1 1 1 1 1]
 [1 1 1 1 1 1 0 1 1 1 1 1 1 1]
 [1 1 1 0 1 1 1 1 1 0 1 1 0 1]
 [1 0 1 1 1 1 1 1 0 0 1 1 1 1]
 [1 1 1 1 1 0 0 1 1 1 1 1 1 1]
 [1 1 0 1 1 1 1 1 1 1 1 0 1 1]
 [1 1 1 1 0 1 0 1 1 0 1 1 1 1]
 [1 1 1 1 1 1 1 1 1 1 1 1 1 1]
 [1 1 1 1 0 1 1 0 1 1 0 1 1 1]
 [1 1 1 1 1 1 1 1 1 1 1 1 1 1]]
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (7, 10)
Neighbours: [[8, 10], [8, 9], [8, 11], [7, 11], [7, 9], [6, 10], [6, 11], [6, 9]]
Tuple of neighbour: (8, 10)
Tuple of neighbour: (8, 9)
Tuple of neighbour: (8, 11)
Tuple of neighbour: (7, 11)
Tuple of neighbour: (7, 9)
Tuple of neighbour: (6, 10)
Tuple of neighbour: (6, 11)
Tuple of neighbour: (6, 9)
Place (7, 10) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (7, 0)
Neighbours: [[8, 0], [8, -1], [8, 1], [7, 1], [7, -1], [6, 0], [6, 1], [6, -1]]
Tuple of neighbour: (8, 0)
Tuple of neighbour: (8, -1)
Tuple of neighbour: (8, 1)
Tuple of neighbour: (7, 1)
Tuple of neighbour: (7, -1)
Tuple of neighbour: (6, 0)
Tuple of neighbour: (6, 1)
Tuple of neighbour: (6, -1)
Place (7, 0) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (1, 5)
Neighbours: [[2, 5], [2, 4], [2, 6], [1, 6], [1, 4], [0, 5], [0, 6], [0, 4]]
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 4)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (1, 6)
Tuple of neighbour: (1, 4)
Tuple of neighbour: (0, 5)
Tuple of neighbour: (0, 6)
Tuple of neighbour: (0, 4)
Place (1, 5) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (2, 2)
Neighbours: [[3, 2], [3, 1], [3, 3], [2, 3], [2, 1], [1, 2], [1, 3], [1, 1]]
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 1)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (2, 3)
Tuple of neighbour: (2, 1)
Tuple of neighbour: (1, 2)
Tuple of neighbour: (1, 3)
Tuple of neighbour: (1, 1)
Place (2, 2) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (4, 10)
Neighbours: [[5, 10], [5, 9], [5, 11], [4, 11], [4, 9], [3, 10], [3, 11], [3, 9]]
Tuple of neighbour: (5, 10)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 11)
Tuple of neighbour: (4, 11)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (3, 10)
Tuple of neighbour: (3, 11)
Tuple of neighbour: (3, 9)
Place (4, 10) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (4, 2)
Neighbours: [[5, 2], [5, 1], [5, 3], [4, 3], [4, 1], [3, 2], [3, 3], [3, 1]]
Tuple of neighbour: (5, 2)
Tuple of neighbour: (5, 1)
Tuple of neighbour: (5, 3)
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 1)
Tuple of neighbour: (3, 2)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (3, 1)
Place (4, 2) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (6, 8)
Neighbours: [[7, 8], [7, 7], [7, 9], [6, 9], [6, 7], [5, 8], [5, 9], [5, 7]]
Tuple of neighbour: (7, 8)
Tuple of neighbour: (7, 7)
Tuple of neighbour: (7, 9)
Tuple of neighbour: (6, 9)
Tuple of neighbour: (6, 7)
Tuple of neighbour: (5, 8)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (5, 7)
Place (6, 8) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (3, 4)
Neighbours: [[4, 4], [4, 3], [4, 5], [3, 5], [3, 3], [2, 4], [2, 5], [2, 3]]
Tuple of neighbour: (4, 4)
Tuple of neighbour: (4, 3)
Tuple of neighbour: (4, 5)
Tuple of neighbour: (3, 5)
Tuple of neighbour: (3, 3)
Tuple of neighbour: (2, 4)
Tuple of neighbour: (2, 5)
Tuple of neighbour: (2, 3)
Place (3, 4) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (2, 7)
Neighbours: [[3, 7], [3, 6], [3, 8], [2, 8], [2, 6], [1, 7], [1, 8], [1, 6]]
Tuple of neighbour: (3, 7)
Tuple of neighbour: (3, 6)
Tuple of neighbour: (3, 8)
Tuple of neighbour: (2, 8)
Tuple of neighbour: (2, 6)
Tuple of neighbour: (1, 7)
Tuple of neighbour: (1, 8)
Tuple of neighbour: (1, 6)
Place (2, 7) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (6, 3)
Neighbours: [[7, 3], [7, 2], [7, 4], [6, 4], [6, 2], [5, 3], [5, 4], [5, 2]]
Tuple of neighbour: (7, 3)
Tuple of neighbour: (7, 2)
Checking collision:
Checking collision with place == (6, 3) move_offset== 10 other_elves == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 12
offset: [-1, 1]
Proposed move for position (6, 3) is 0
Get new place:
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (8, 5)
Neighbours: [[9, 5], [9, 4], [9, 6], [8, 6], [8, 4], [7, 5], [7, 6], [7, 4]]
Tuple of neighbour: (9, 5)
Checking collision:
Checking collision with place == (8, 5) move_offset== 10 other_elves == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 12
offset: [-1, 1]
Proposed move for position (8, 5) is 0
Get new place:
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (4, 8)
Neighbours: [[5, 8], [5, 7], [5, 9], [4, 9], [4, 7], [3, 8], [3, 9], [3, 7]]
Tuple of neighbour: (5, 8)
Tuple of neighbour: (5, 7)
Tuple of neighbour: (5, 9)
Tuple of neighbour: (4, 9)
Tuple of neighbour: (4, 7)
Tuple of neighbour: (3, 8)
Tuple of neighbour: (3, 9)
Tuple of neighbour: (3, 7)
Place (4, 8) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (11, 1)
Neighbours: [[12, 1], [12, 0], [12, 2], [11, 2], [11, 0], [10, 1], [10, 2], [10, 0]]
Tuple of neighbour: (12, 1)
Tuple of neighbour: (12, 0)
Tuple of neighbour: (12, 2)
Tuple of neighbour: (11, 2)
Tuple of neighbour: (11, 0)
Tuple of neighbour: (10, 1)
Tuple of neighbour: (10, 2)
Tuple of neighbour: (10, 0)
Place (11, 1) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (12, 4)
Neighbours: [[13, 4], [13, 3], [13, 5], [12, 5], [12, 3], [11, 4], [11, 5], [11, 3]]
Tuple of neighbour: (13, 4)
Tuple of neighbour: (13, 3)
Tuple of neighbour: (13, 5)
Tuple of neighbour: (12, 5)
Tuple of neighbour: (12, 3)
Tuple of neighbour: (11, 4)
Tuple of neighbour: (11, 5)
Tuple of neighbour: (11, 3)
Place (12, 4) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (11, 7)
Neighbours: [[12, 7], [12, 6], [12, 8], [11, 8], [11, 6], [10, 7], [10, 8], [10, 6]]
Tuple of neighbour: (12, 7)
Tuple of neighbour: (12, 6)
Tuple of neighbour: (12, 8)
Tuple of neighbour: (11, 8)
Tuple of neighbour: (11, 6)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 8)
Tuple of neighbour: (10, 6)
Place (11, 7) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (10, 10)
Neighbours: [[11, 10], [11, 9], [11, 11], [10, 11], [10, 9], [9, 10], [9, 11], [9, 9]]
Tuple of neighbour: (11, 10)
Tuple of neighbour: (11, 9)
Tuple of neighbour: (11, 11)
Tuple of neighbour: (10, 11)
Tuple of neighbour: (10, 9)
Tuple of neighbour: (9, 10)
Tuple of neighbour: (9, 11)
Tuple of neighbour: (9, 9)
Place (10, 10) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (7, 2)
Neighbours: [[8, 2], [8, 1], [8, 3], [7, 3], [7, 1], [6, 2], [6, 3], [6, 1]]
Tuple of neighbour: (8, 2)
Tuple of neighbour: (8, 1)
Tuple of neighbour: (8, 3)
Tuple of neighbour: (7, 3)
Tuple of neighbour: (7, 1)
Tuple of neighbour: (6, 2)
Tuple of neighbour: (6, 3)
Checking collision:
Checking collision with place == (7, 2) move_offset== 10 other_elves == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 12
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 10
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 11
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 12
offset: [1, 1]
Proposed move for position (7, 2) is 1
Get new place:
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (9, 4)
Neighbours: [[10, 4], [10, 3], [10, 5], [9, 5], [9, 3], [8, 4], [8, 5], [8, 3]]
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 3)
Tuple of neighbour: (10, 5)
Tuple of neighbour: (9, 5)
Checking collision:
Checking collision with place == (9, 4) move_offset== 10 other_elves == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 12
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 10
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 11
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 12
offset: [1, 1]
Proposed move for position (9, 4) is 1
Get new place:
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (9, 8)
Neighbours: [[10, 8], [10, 7], [10, 9], [9, 9], [9, 7], [8, 8], [8, 9], [8, 7]]
Tuple of neighbour: (10, 8)
Tuple of neighbour: (10, 7)
Tuple of neighbour: (10, 9)
Tuple of neighbour: (9, 9)
Tuple of neighbour: (9, 7)
Tuple of neighbour: (8, 8)
Tuple of neighbour: (8, 9)
Tuple of neighbour: (8, 7)
Place (9, 8) does not move.
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (9, 5)
Neighbours: [[10, 5], [10, 4], [10, 6], [9, 6], [9, 4], [8, 5], [8, 6], [8, 4]]
Tuple of neighbour: (10, 5)
Tuple of neighbour: (10, 4)
Tuple of neighbour: (10, 6)
Tuple of neighbour: (9, 6)
Tuple of neighbour: (9, 4)
Checking collision:
Checking collision with place == (9, 5) move_offset== 10 other_elves == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 12
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 10
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 11
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 12
offset: [1, 1]
Proposed move for position (9, 5) is 1
Get new place:
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (6, 6)
Neighbours: [[7, 6], [7, 5], [7, 7], [6, 7], [6, 5], [5, 6], [5, 7], [5, 5]]
Tuple of neighbour: (7, 6)
Tuple of neighbour: (7, 5)
Tuple of neighbour: (7, 7)
Tuple of neighbour: (6, 7)
Tuple of neighbour: (6, 5)
Tuple of neighbour: (5, 6)
Checking collision:
Checking collision with place == (6, 6) move_offset== 10 other_elves == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 12
offset: [-1, 1]
Thing: [[1, 0], [1, -1], [1, 1]]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 10
offset: [1, 0]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 11
offset: [1, -1]
thing == [[1, 0], [1, -1], [1, 1]]
(offset_count+move_offset) == 12
offset: [1, 1]
Proposed move for position (6, 6) is 1
Get new place:
coords == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Called check_moving with cur_place (5, 6)
Neighbours: [[6, 6], [6, 5], [6, 7], [5, 7], [5, 5], [4, 6], [4, 7], [4, 5]]
Tuple of neighbour: (6, 6)
Checking collision:
Checking collision with place == (5, 6) move_offset== 10 other_elves == {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (6, 3): 2, (8, 5): 14, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (7, 2): 6, (9, 4): 3, (9, 8): 18, (9, 5): 9, (6, 6): 13, (5, 6): 12}
Thing: [[-1, 0], [-1, -1], [-1, 1]]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 10
offset: [-1, 0]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 11
offset: [-1, -1]
thing == [[-1, 0], [-1, -1], [-1, 1]]
(offset_count+move_offset) == 12
offset: [-1, 1]
Proposed move for position (5, 6) is 0
Get new place:
==== 2 =====
Moved places: {(5, 3): [(2, (6, 3))], (7, 5): [(14, (8, 5))], (8, 2): [(6, (7, 2))], (10, 4): [(3, (9, 4))], (10, 5): [(9, (9, 5))], (7, 6): [(13, (6, 6))], (4, 6): [(12, (5, 6))]}
moved_places == {(5, 3): [(2, (6, 3))], (7, 5): [(14, (8, 5))], (8, 2): [(6, (7, 2))], (10, 4): [(3, (9, 4))], (10, 5): [(9, (9, 5))], (7, 6): [(13, (6, 6))], (4, 6): [(12, (5, 6))]}
element == [(2, (6, 3))]
moved_places == {(5, 3): [(2, (6, 3))], (7, 5): [(14, (8, 5))], (8, 2): [(6, (7, 2))], (10, 4): [(3, (9, 4))], (10, 5): [(9, (9, 5))], (7, 6): [(13, (6, 6))], (4, 6): [(12, (5, 6))]}
element == [(14, (8, 5))]
moved_places == {(5, 3): [(2, (6, 3))], (7, 5): [(14, (8, 5))], (8, 2): [(6, (7, 2))], (10, 4): [(3, (9, 4))], (10, 5): [(9, (9, 5))], (7, 6): [(13, (6, 6))], (4, 6): [(12, (5, 6))]}
element == [(6, (7, 2))]
moved_places == {(5, 3): [(2, (6, 3))], (7, 5): [(14, (8, 5))], (8, 2): [(6, (7, 2))], (10, 4): [(3, (9, 4))], (10, 5): [(9, (9, 5))], (7, 6): [(13, (6, 6))], (4, 6): [(12, (5, 6))]}
element == [(3, (9, 4))]
moved_places == {(5, 3): [(2, (6, 3))], (7, 5): [(14, (8, 5))], (8, 2): [(6, (7, 2))], (10, 4): [(3, (9, 4))], (10, 5): [(9, (9, 5))], (7, 6): [(13, (6, 6))], (4, 6): [(12, (5, 6))]}
element == [(9, (9, 5))]
moved_places == {(5, 3): [(2, (6, 3))], (7, 5): [(14, (8, 5))], (8, 2): [(6, (7, 2))], (10, 4): [(3, (9, 4))], (10, 5): [(9, (9, 5))], (7, 6): [(13, (6, 6))], (4, 6): [(12, (5, 6))]}
element == [(13, (6, 6))]
moved_places == {(5, 3): [(2, (6, 3))], (7, 5): [(14, (8, 5))], (8, 2): [(6, (7, 2))], (10, 4): [(3, (9, 4))], (10, 5): [(9, (9, 5))], (7, 6): [(13, (6, 6))], (4, 6): [(12, (5, 6))]}
element == [(12, (5, 6))]
Final coords: {(7, 10): 21, (7, 0): 0, (1, 5): 11, (2, 2): 5, (4, 10): 20, (4, 2): 1, (6, 8): 17, (3, 4): 8, (2, 7): 15, (4, 8): 16, (11, 1): 4, (12, 4): 7, (11, 7): 10, (10, 10): 19, (9, 8): 18, (5, 3): 2, (7, 5): 14, (8, 2): 6, (10, 4): 3, (10, 5): 9, (7, 6): 13, (4, 6): 12}
min_x: 1
min_y: 0
max_x: 12
max_y: 10
(1,5) in coords!
(2,2) in coords!
(2,7) in coords!
(3,4) in coords!
(4,2) in coords!
(4,6) in coords!
(4,8) in coords!
(4,10) in coords!
(5,3) in coords!
(6,8) in coords!
(7,0) in coords!
(7,5) in coords!
(7,6) in coords!
(7,10) in coords!
(8,2) in coords!
(9,8) in coords!
(10,4) in coords!
(10,5) in coords!
(10,10) in coords!
(11,1) in coords!
(11,7) in coords!
(12,4) in coords!
Solution to puzzle: 110
